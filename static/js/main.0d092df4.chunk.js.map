{"version":3,"sources":["utils/localStorage.js","api/index.js","utils/route.js","redux/actions/actionsAuthentication.js","redux/actions/actionsArticles.js","redux/redusers.js","redux/selectors.js","components/Header/Header.jsx","components/Header/index.js","components/forms/form-registration/vadalition.js","components/forms/styled.js","components/forms/form-registration/Form-registration.jsx","components/forms/form-registration/index.js","components/forms/form-autorisation/vadalition.js","components/forms/form-autorisation/Form-autorisation.jsx","components/forms/form-autorisation/index.js","components/forms/form-add-article/validation.js","components/forms/form-add-article/FormAddArticle.jsx","components/forms/form-add-article/index.js","components/forms/form-edit-article/validation.js","components/forms/form-edit-article/FormEditArticle.jsx","components/forms/form-edit-article/index.js","utils/formatDate.js","components/articles/Article/Article.jsx","components/articles/Article/index.js","components/articles/articles-list/ArticlesList.jsx","components/articles/articles-list/index.js","components/articles/view-article/ViewArticle.jsx","components/articles/view-article/index.js","components/Home/Home.jsx","components/Home/index.js","components/App/App.jsx","components/App/index.js","index.jsx"],"names":["getToken","localStorage","getItem","clearLocalstoge","clear","setToken","token","setItem","baseUrl","instance","axios","create","interceptors","request","use","config","userConfig","headers","Authorization","userRequest","url","get","loginRequest","values","regData","user","username","email","password","post","signupRequest","autData","articlesRequest","count","articleRequest","slug","addArticlesRequest","userArticlesRequest","favoriteArticleRequest","unfavoriteArticleRequest","delete","editArticleRequest","put","deleteArticleRequest","getSlug","getEdit","setSignUpRequest","createAction","setSignUpSuccess","setSignUpFailure","setLoginRequest","setLoginSuccess","setLoginFailure","setUserRequest","setUserSuccess","setUserFailure","setLoginExit","getUser","history","dispatch","a","response","data","push","setArticlesRequest","setArticlesSuccess","setArticlesFailure","setArticleRequest","setArticleSuccess","setArticleFailure","setCreateArticleRequest","setCreateArticleSuccess","setCreateArticleFailure","setUserArticleRequest","setUserArticleSuccess","setUserArticleFailure","setDeleteArticleRequest","setDeleteArticleSuccess","setDeleteArticleFailure","setEditArticleRequest","setEditArticleSuccess","setEditArticleFailure","setFavoriteArticleRequest","setFavoriteArticleSuccess","setFavoriteArticleFailure","getArticles","isAxiosError","createArticles","userArticles","favoriteArticle","unfavoriteArticle","handleActions","actionsAuthentication","state","payload","isAuth","isErrorInternet","actionsArticles","isBlockingForm","articlesList","articles","userArticle","article","favorited","favoritesCount","articlesCount","forEach","item","articleOne","combineReducers","getIsAuth","getUsername","getBlockingForm","getArticlesList","getArticleOne","getIsErrorInternet","actionCreators","Header","connect","handleClickExit","className","path","component","onClick","to","validationSchema","Yup","shape","max","min","required","matches","useStyles","makeStyles","theme","form__container","display","justifyContent","flexDirection","alignItems","padding","spacing","form__container__addArticle","width","form__title","textTransform","textAlign","margin","marginTop","fontSize","form__user","alignContent","form__user__data","marginBottom","form__user__body","rows","form__block__tags","form__user__tags","borderRadius","form__user__btn__tags","error__internet","color","form__user__tagList","form__user__btn","backgroundColor","borderColor","registration","status","FormRegistration","classes","handleSubmitRegistration","setFieldError","undefined","errors","initialValues","onSubmit","touched","handleSubmit","handleBlur","handleChange","dirty","isValid","size","name","as","TextField","label","variant","onChange","error","Boolean","helperText","onBlur","value","disabled","type","autoComplete","fullWidth","htmlType","errorName","authorization","FormAutorization","handleSubmitAutorization","title","description","body","FormAddArticle","useState","statusCreateArticle","setStatusCreateArticle","tags","tagList","normalizeData","arrTag","filter","reduce","acc","Array","from","Set","handleSubmitForm","arrTagList","setFieldValue","TextareaAutosize","placeholder","render","remove","map","tag","index","key","id","trim","uniqueId","editArticle","FormEditArticle","statusEditArticle","setStatusEditArticle","arrayHelpers","formatDate","date","formatDistanceToNow","Date","locale","ru","Article","handleClikLikBtn","Lick","Tooltip","Favorite","FavoriteBorder","author","alt","src","image","createdAt","updatedAt","getArticle","ArticlesList","useHistory","hanleClckArticle","event","target","parentElement","classList","contains","handleChangePagination","page","countOffset","onKeyDown","tabIndex","role","Pagination","Math","ceil","deleteArticle","ViewArticle","statusDeleteArticle","setStatusDeleteArticle","handleClickBtnLike","handleClickBtnDelete","handleClickBtnEdit","Houme","App","fetchPath","useEffect","Home","exact","store","createStore","redusers","compose","applyMiddleware","thunk","Main","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0d092df4.chunk.js","sourcesContent":["export const getToken = () => {\n  const token = localStorage.getItem('token');\n  return token;\n};\n\nexport const clearLocalstoge = () => {\n  localStorage.clear();\n};\n\nexport const setToken = (token) => {\n  localStorage.setItem('token', `${token}`);\n};\n","import axios from 'axios';\nimport { getToken } from '../utils/localStorage';\n\nexport const baseUrl = 'https://conduit.productionready.io/api/';\n\nexport const instance = axios.create();\n\ninstance.interceptors.request.use((config) => {\n  const token = getToken();\n  if (token) {\n    const userConfig = config;\n    userConfig.headers.Authorization = `Token ${getToken()}`;\n    return userConfig;\n  }\n  return config;\n});\n\nexport const userRequest = () => {\n  const url = `${baseUrl}user`;\n  const response = instance.get(url);\n  return response;\n};\n\nexport const loginRequest = (values) => {\n  const { username, email, password } = values;\n  const regData = {\n    user: {\n      username,\n      email,\n      password,\n    },\n  };\n\n  const url = `${baseUrl}users`;\n  const response = axios.post(url, regData);\n  return response;\n};\n\nexport const signupRequest = (values) => {\n  const { email, password } = values;\n  const autData = {\n    user: {\n      email,\n      password,\n    },\n  };\n  const url = `${baseUrl}users/login`;\n  const response = axios.post(url, autData);\n  return response;\n};\n\nexport const articlesRequest = (count) => {\n  const url = `${baseUrl}articles?limit=10&offset=${count}`;\n  const response = instance.get(url);\n  return response;\n};\n\nexport const articleRequest = (slug) => {\n  const url = `${baseUrl}articles/${slug}`;\n  const response = instance.get(url);\n  return response;\n};\n\nexport const addArticlesRequest = (values) => {\n  const url = `${baseUrl}articles`;\n  const response = instance.post(url, values);\n  return response;\n};\n\nexport const userArticlesRequest = (values, count) => {\n  const url = `${baseUrl}articles?author=${values}&offset=${count}`;\n  const response = instance.get(url);\n  return response;\n};\n\nexport const favoriteArticleRequest = (slug) => {\n  const url = `${baseUrl}articles/${slug}/favorite`;\n  const response = instance.post(url);\n  return response;\n};\n\nexport const unfavoriteArticleRequest = (slug) => {\n  const url = `${baseUrl}articles/${slug}/favorite`;\n  const response = instance.delete(url);\n  return response;\n};\n\nexport const editArticleRequest = (values, slug) => {\n  const url = `${baseUrl}articles/${slug}`;\n  const response = instance.put(url, values);\n  return response;\n};\n\nexport const deleteArticleRequest = (slug) => {\n  const url = `${baseUrl}articles/${slug}`;\n  const response = instance.delete(url);\n  return response;\n};\n","export const getBlogging = () => '/blogging-platform';\n\nexport const getLogin = () => '/blogging-platform/login';\n\nexport const getSignup = () => '/blogging-platform/signup';\n\nexport const getAdd = () => '/blogging-platform/add';\n\nexport const getHome = () => '/blogging-platform/home';\n\nexport const getSlug = (slug) => `/blogging-platform/articles/:${slug}`;\n\nexport const getEdit = (slug) => `/blogging-platform/articles/:${slug}/edit`;\n","import { createAction } from 'redux-actions';\nimport { loginRequest, signupRequest, userRequest } from '../../api/index';\nimport { setToken } from '../../utils/localStorage';\nimport { getBlogging, getSignup } from '../../utils/route';\n\nexport const setSignUpRequest = createAction('STATUS_SIGNUP_REQUEST');\nexport const setSignUpSuccess = createAction('STATUS_SIGNUP_SUCCESS');\nexport const setSignUpFailure = createAction('STATUS_SIGNUP_FAILURE');\n\nexport const setLoginRequest = createAction('STATUS_LOGIN_REQUEST');\nexport const setLoginSuccess = createAction('STATUS_LOGIN_SUCCESS');\nexport const setLoginFailure = createAction('STATUS_LOGIN_FAILURE');\n\nexport const setUserRequest = createAction('STATUS_USER_REQUEST');\nexport const setUserSuccess = createAction('STATUS_USER_SUCCESS');\nexport const setUserFailure = createAction('STATUS_USER_FAILURE');\n\nexport const setLoginExit = createAction('LOGIN_EXIT');\n\nexport const getUser = (history) => async (dispatch) => {\n  dispatch(setUserRequest());\n  try {\n    const response = await userRequest();\n    dispatch(setUserSuccess(response.data));\n    history.push(getBlogging());\n  } catch (error) {\n    dispatch(setUserFailure());\n    history.push(getSignup());\n  }\n};\n\nexport const authorization = (values) => async (dispatch) => {\n  dispatch(setSignUpRequest());\n  try {\n    const response = await signupRequest(values);\n    const { token } = response.data.user;\n    setToken(token);\n    dispatch(setSignUpSuccess());\n  } catch (error) {\n    dispatch(setSignUpFailure());\n    throw error;\n  }\n};\n\nexport const registration = (values) => async (dispatch) => {\n  dispatch(setLoginRequest());\n  try {\n    const response = await loginRequest(values);\n    if (response.status === 200) {\n      const { token } = response.data.user;\n      localStorage.setItem('token', `${token}`);\n      dispatch(setLoginSuccess());\n    }\n  } catch (error) {\n    dispatch(setLoginFailure());\n    throw error;\n  }\n};\n","import { createAction } from 'redux-actions';\n\nimport {\n  articlesRequest,\n  addArticlesRequest,\n  userArticlesRequest,\n  articleRequest,\n  favoriteArticleRequest,\n  unfavoriteArticleRequest,\n  editArticleRequest,\n  deleteArticleRequest,\n} from '../../api/index';\n\nimport { getSlug } from '../../utils/route';\n\nexport const setArticlesRequest = createAction('STATUS_ARTICLES_REQUEST');\nexport const setArticlesSuccess = createAction('STATUS_ARTICLES_SUCCESS');\nexport const setArticlesFailure = createAction('STATUS_ARTICLES_FAILURE');\n\nexport const setArticleRequest = createAction('STATUS_ARTICLE_REQUEST');\nexport const setArticleSuccess = createAction('STATUS_ARTICLE_SUCCESS');\nexport const setArticleFailure = createAction('STATUS_ARTICLE_FAILURE');\n\nexport const setCreateArticleRequest = createAction(\n  'STATUS_CREATE_ARTICLE_REQUEST',\n);\nexport const setCreateArticleSuccess = createAction(\n  'STATUS_CREATE_ARTICLE_SUCCESS',\n);\nexport const setCreateArticleFailure = createAction(\n  'STATUS_CREATE_ARTICLE_FAILURE',\n);\n\nexport const setUserArticleRequest = createAction(\n  'STATUS_USER_ARTICLE_REQUEST',\n);\nexport const setUserArticleSuccess = createAction(\n  'STATUS_USER_ARTICLE_SUCCESS',\n);\nexport const setUserArticleFailure = createAction(\n  'STATUS_USER_ARTICLE_FAILURE',\n);\n\nexport const setDeleteArticleRequest = createAction(\n  'STATUS_DELETE_ARTICLE_REQUEST',\n);\nexport const setDeleteArticleSuccess = createAction(\n  'STATUS_DELETE_ARTICLE_SUCCESS',\n);\nexport const setDeleteArticleFailure = createAction(\n  'STATUS_DELETE_ARTICLE_FAILURE',\n);\n\nexport const setEditArticleRequest = createAction(\n  'STATUS_EDIT_ARTICLE_REQUEST',\n);\nexport const setEditArticleSuccess = createAction(\n  'STATUS_EDIT_ARTICLE_SUCCESS',\n);\nexport const setEditArticleFailure = createAction(\n  'STATUS_EDIT_ARTICLE_FAILURE',\n);\n\nexport const setFavoriteArticleRequest = createAction(\n  'STATUS_FAVORITE_ARTICLE_REQUEST',\n);\nexport const setFavoriteArticleSuccess = createAction(\n  'STATUS_FAVORITE_ARTICLE_SUCCESS',\n);\nexport const setFavoriteArticleFailure = createAction(\n  'STATUS_FAVORITE_ARTICLE_FAILURE',\n);\nexport const getArticles = (count = 0) => async (dispatch) => {\n  dispatch(setArticlesRequest);\n  try {\n    const response = await articlesRequest(count);\n    dispatch(setArticlesSuccess(response.data));\n  } catch (error) {\n    dispatch(setArticlesFailure(error.isAxiosError));\n    throw error;\n  }\n};\n\nexport const getArticle = (slug, history = null) => async (dispatch) => {\n  dispatch(setArticleRequest);\n  try {\n    const response = await articleRequest(slug);\n    dispatch(setArticleSuccess(response.data));\n    if (history !== null) {\n      history.push(getSlug(slug));\n    }\n  } catch (error) {\n    dispatch(setArticleFailure(error.isAxiosError));\n    throw error;\n  }\n};\n\nexport const createArticles = (values) => async (dispatch) => {\n  dispatch(setCreateArticleRequest());\n  try {\n    await addArticlesRequest(values);\n    dispatch(setCreateArticleSuccess());\n  } catch (error) {\n    dispatch(setCreateArticleFailure(error.isAxiosError));\n    throw error;\n  }\n};\n\nexport const userArticles = (values, count = 0) => async (dispatch) => {\n  dispatch(setUserArticleRequest());\n  try {\n    const response = await userArticlesRequest(values, count);\n    dispatch(setUserArticleSuccess(response.data));\n  } catch (error) {\n    dispatch(setUserArticleFailure(error.isAxiosError));\n    throw error;\n  }\n};\n\nexport const deleteArticle = (slug) => async (dispatch) => {\n  dispatch(setDeleteArticleRequest());\n  try {\n    await deleteArticleRequest(slug);\n    dispatch(setDeleteArticleSuccess());\n  } catch (error) {\n    dispatch(setDeleteArticleFailure(error.isAxiosError));\n    throw error;\n  }\n};\n\nexport const editArticle = (values, slug) => async (dispatch) => {\n  dispatch(setEditArticleRequest());\n  try {\n    await editArticleRequest(values, slug);\n    dispatch(setEditArticleSuccess());\n  } catch (error) {\n    dispatch(setEditArticleFailure());\n    throw error;\n  }\n};\n\nexport const favoriteArticle = (slug) => async (dispatch) => {\n  dispatch(setFavoriteArticleRequest());\n  try {\n    const response = await favoriteArticleRequest(slug);\n    dispatch(setFavoriteArticleSuccess(response.data));\n  } catch (error) {\n    dispatch(setFavoriteArticleFailure(error.isAxiosError));\n  }\n};\n\nexport const unfavoriteArticle = (slug) => async (dispatch) => {\n  dispatch(setFavoriteArticleRequest());\n  try {\n    const response = await unfavoriteArticleRequest(slug);\n    dispatch(setFavoriteArticleSuccess(response.data));\n  } catch (error) {\n    dispatch(setFavoriteArticleFailure(error.isAxiosError));\n  }\n};\n","/* eslint-disable no-param-reassign */\nimport { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actionsAuthentication from './actions/actionsAuthentication';\nimport * as actionsArticles from './actions/actionsArticles';\n\nconst username = handleActions(\n  {\n    [actionsAuthentication.setUserSuccess](state, { payload: login }) {\n      return login.user.username;\n    },\n  },\n  '',\n);\n\nconst isAuth = handleActions(\n  {\n    [actionsAuthentication.setLoginSuccess]() {\n      return true;\n    },\n    [actionsAuthentication.setSignUpSuccess]() {\n      return true;\n    },\n    [actionsAuthentication.setUserSuccess]() {\n      return true;\n    },\n    [actionsAuthentication.setLoginFailure]() {\n      return false;\n    },\n    [actionsAuthentication.setSignUpFailure]() {\n      return false;\n    },\n    [actionsAuthentication.setUserFailure]() {\n      return false;\n    },\n    [actionsAuthentication.setLoginExit]() {\n      return false;\n    },\n  },\n  false,\n);\n\nconst isErrorInternet = handleActions(\n  {\n    [actionsArticles.setFavoriteArticleFailure](\n      state,\n      { payload: isAxiosError },\n    ) {\n      return isAxiosError;\n    },\n    [actionsArticles.setFavoriteArticleSuccess]() {\n      return false;\n    },\n    [actionsArticles.setCreateArticleFailure]() {\n      return false;\n    },\n    [actionsArticles.setDeleteArticleFailure](\n      state,\n      { payload: isAxiosError },\n    ) {\n      return isAxiosError;\n    },\n    [actionsArticles.setDeleteArticleSuccess]() {\n      return false;\n    },\n    [actionsArticles.setUserArticleFailure](state, { payload: isAxiosError }) {\n      return isAxiosError;\n    },\n    [actionsArticles.setUserArticleSuccess]() {\n      return false;\n    },\n    [actionsArticles.setCreateArticleSuccess]() {\n      return false;\n    },\n    [actionsArticles.setArticlesFailure](state, { payload: isAxiosError }) {\n      return isAxiosError;\n    },\n    [actionsArticles.setArticleFailure](state, { payload: isAxiosError }) {\n      return isAxiosError;\n    },\n    [actionsArticles.setArticlesSuccess]() {\n      return false;\n    },\n    [actionsArticles.setArticleSuccess]() {\n      return false;\n    },\n  },\n  false,\n);\n\nconst isBlockingForm = handleActions(\n  {\n    [actionsAuthentication.setLoginRequest]() {\n      return true;\n    },\n    [actionsArticles.setCreateArticleRequest]() {\n      return true;\n    },\n    [actionsArticles.setDeleteArticleRequest]() {\n      return true;\n    },\n    [actionsArticles.setEditArticleRequest]() {\n      return true;\n    },\n    [actionsArticles.setFavoriteArticleRequest]() {\n      return true;\n    },\n    [actionsAuthentication.setSignUpRequest]() {\n      return true;\n    },\n    [actionsAuthentication.setUserSuccess]() {\n      return false;\n    },\n    [actionsArticles.setCreateArticleSuccess]() {\n      return false;\n    },\n    [actionsArticles.setDeleteArticleSuccess]() {\n      return false;\n    },\n    [actionsAuthentication.setLoginExit]() {\n      return false;\n    },\n    [actionsArticles.setEditArticleSuccess]() {\n      return false;\n    },\n    [actionsArticles.setFavoriteArticleSuccess]() {\n      return false;\n    },\n    [actionsAuthentication.setLoginFailure]() {\n      return false;\n    },\n    [actionsArticles.setCreateArticleFailure]() {\n      return false;\n    },\n    [actionsArticles.setDeleteArticleFailure]() {\n      return false;\n    },\n    [actionsArticles.setEditArticleFailure]() {\n      return false;\n    },\n    [actionsArticles.setFavoriteArticleFailure]() {\n      return false;\n    },\n    [actionsAuthentication.setSignUpFailure]() {\n      return false;\n    },\n    [actionsAuthentication.setUserFailure]() {\n      return false;\n    },\n  },\n  false,\n);\n\nconst articlesList = handleActions(\n  {\n    [actionsArticles.setArticlesSuccess](state, { payload: articles }) {\n      return articles;\n    },\n    [actionsArticles.setUserArticleSuccess](state, { payload: articles }) {\n      const userArticle = true;\n      return { ...articles, userArticle };\n    },\n    [actionsArticles.setFavoriteArticleSuccess](\n      state,\n      { payload: { article } },\n    ) {\n      const { slug, favorited, favoritesCount } = article;\n      const { articles, articlesCount } = state;\n      articles.forEach((item) => {\n        if (slug === item.slug) {\n          item.favorited = favorited;\n          item.favoritesCount = favoritesCount;\n        }\n      });\n      return { articles, articlesCount };\n    },\n  },\n  [],\n);\n\nconst articleOne = handleActions(\n  {\n    [actionsArticles.setArticleSuccess](state, { payload: article }) {\n      return article;\n    },\n    [actionsArticles.setFavoriteArticleSuccess](state, { payload: article }) {\n      return article;\n    },\n  },\n  [],\n);\n\nexport default combineReducers({\n  articlesList,\n  articleOne,\n  isAuth,\n  username,\n  isBlockingForm,\n  isErrorInternet,\n});\n","export const getIsAuth = (state) => state.isAuth;\nexport const getUsername = (state) => state.username;\nexport const getBlockingForm = (state) => state.isBlockingForm;\nexport const getIsINternetError = (state) => state.isInternetError;\nexport const getArticlesList = (state) => state.articlesList;\nexport const getArticleOne = (state) => state.articleOne;\nexport const getIsErrorInternet = (state) => state.isErrorInternet;\n","import React from 'react';\nimport './Header.css';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport { getIsAuth, getIsErrorInternet } from '../../redux/selectors';\nimport * as actionsAuthentication from '../../redux/actions/actionsAuthentication';\nimport { clearLocalstoge } from '../../utils/localStorage';\nimport { getBlogging, getLogin, getSignup } from '../../utils/route';\n\nconst Header = ({ setLoginExit, isErrorInternet }) => {\n  const handleClickExit = () => {\n    setLoginExit();\n    clearLocalstoge();\n  };\n\n  const Login = () => (\n    <Button className=\"header__btn\" onClick={handleClickExit}>\n      <NavLink to={getLogin()}>Войти</NavLink>\n    </Button>\n  );\n  const Signup = () => (\n    <Button className=\"header__btn\" onClick={handleClickExit}>\n      <NavLink to={getSignup()}>Регистрация</NavLink>\n    </Button>\n  );\n\n  const Exit = () => (\n    <>\n      <Button className=\"header__btn\" onClick={handleClickExit}>\n        <NavLink to={getSignup()}>Выход</NavLink>\n      </Button>\n    </>\n  );\n\n  return (\n    <div className=\"header\">\n      {isErrorInternet && (\n        <span className=\"error__internet\">Нет подключения к интернету</span>\n      )}\n      <Switch>\n        <Route path={getSignup()} component={Login} />\n        <Route path={getLogin()} component={Signup} />\n        <Route path={getBlogging()} component={Exit} />\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isAuth: getIsAuth(state),\n    isErrorInternet: getIsErrorInternet(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  setLoginExit: actionsAuthentication.setLoginExit,\n};\n\nHeader.propTypes = {\n  setLoginExit: PropTypes.func.isRequired,\n  isErrorInternet: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(Header);\n","import Header from './Header';\n\nexport default Header;\n","import * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .max(50, 'Что-то слишком длинное имя')\n    .min(2, 'Слишком короткое имя')\n    .required('Обязательное поле'),\n  password: Yup.string()\n    .min(8, 'Не менее 8 символов')\n    .max(40, 'Ну может покороче пароль придумаете?')\n    .required('Обязательное поле')\n    .matches(\n      /(?=.*[0-9])(?=.*[A-Z])[a-z0-9A-Z]/,\n      'буквы латинского алфавита и цифры, от 8 до 40 символов, как минимум одна цифра и одна заглавная буква',\n    ),\n  email: Yup.string()\n    .email('Вводи правильно, адрес не коректен')\n    .required('Обязательное поле'),\n});\n\nexport default validationSchema;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  form__container: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n\n  form__container__addArticle: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n\n  form__title: {\n    textTransform: 'uppercase',\n    textAlign: 'center',\n    margin: 0,\n    marginTop: theme.spacing(1),\n    '@media(maxWidth: 1200px)': {\n      fontSize: 18,\n    },\n  },\n\n  form__user: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignContent: 'center',\n    padding: theme.spacing(2),\n  },\n\n  form__user__data: {\n    marginBottom: theme.spacing(2),\n  },\n\n  form__user__body: {\n    marginBottom: theme.spacing(2),\n    rows: '10',\n  },\n\n  form__block__tags: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n\n  form__user__tags: {\n    margin: '5px 0',\n    padding: '5px',\n    borderRadius: '5px',\n  },\n\n  form__user__btn__tags: {\n    margin: '5px 0 0 5px',\n  },\n\n  error__internet: {\n    textAlign: 'center',\n    color: 'red',\n  },\n\n  form__user__tagList: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n\n  form__user__btn: {\n    borderRadius: '5px',\n    backgroundColor: '#1890ff',\n    borderColor: '#1890ff',\n    color: '#ffffff',\n    margin: '5px 0',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { getBlockingForm } from '../../../redux/selectors';\nimport validationSchema from './vadalition';\nimport * as actionsAuthentication from '../../../redux/actions/actionsAuthentication';\nimport useStyles from '../styled';\nimport { getLogin } from '../../../utils/route';\n\nconst FormRegistration = ({ registration, isBlockingForm }) => {\n  const classes = useStyles();\n  const initialValues = {\n    username: '',\n    email: '',\n    password: '',\n  };\n\n  const handleSubmitRegistration = async (values, { setFieldError }) => {\n    try {\n      await registration(values, setFieldError);\n    } catch (error) {\n      if (error.response === undefined && error.isAxiosError) {\n        setFieldError('errorName', 'Нет подключения к интернету');\n      }\n      if (error.response.data.errors.username) {\n        setFieldError(\n          'username',\n          'Пользователь с таким именем уже зарегистрирован',\n        );\n      }\n      if (error.response.data.errors.email) {\n        setFieldError(\n          'email',\n          'Пользователь с такой почтой уже зарегистрирован',\n        );\n      }\n    }\n  };\n\n  return (\n    <div className={classes.form__container}>\n      <h1 className={classes.form__title}>регистрация</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmitRegistration}\n      >\n        {({\n          touched,\n          errors,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          values,\n          dirty,\n          isValid,\n        }) => (\n          <Form className={classes.form__user} onSubmit={handleSubmit}>\n            <Field\n              size=\"small\"\n              name=\"username\"\n              className={classes.form__user__data}\n              as=\"input\"\n              component={TextField}\n              label=\"Имя\"\n              variant=\"outlined\"\n              onChange={handleChange('username')}\n              error={touched.username && Boolean(errors.username)}\n              helperText={touched.username && errors.username}\n              onBlur={handleBlur('username')}\n              required\n              value={values.username}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"email\"\n              className={classes.form__user__data}\n              as=\"input\"\n              component={TextField}\n              label=\"Электронная почта\"\n              variant=\"outlined\"\n              onChange={handleChange('email')}\n              error={touched.email && Boolean(errors.email)}\n              helperText={touched.email && errors.email}\n              onBlur={handleBlur('email')}\n              required\n              value={values.email}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"password\"\n              className={classes.form__user__data}\n              component={TextField}\n              label=\"Пароль\"\n              variant=\"outlined\"\n              onChange={handleChange('password')}\n              type=\"password\"\n              error={touched.password && Boolean(errors.password)}\n              helperText={touched.password && errors.password}\n              onBlur={handleBlur('password')}\n              autoComplete=\"current-password\"\n              fullWidth\n              required\n              value={values.password}\n              disabled={isBlockingForm}\n            />\n            <Button\n              htmlType=\"submit\"\n              type=\"primary\"\n              disabled={!isValid || !dirty || isBlockingForm}\n            >\n              Зарегистрироваться\n            </Button>\n            {errors.errorName && (\n              <span className={classes.error__internet}>\n                {errors.errorName}\n              </span>\n            )}\n          </Form>\n        )}\n      </Formik>\n      <NavLink to={getLogin()}>Войти</NavLink>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isBlockingForm: getBlockingForm(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  registration: actionsAuthentication.registration,\n};\n\nFormRegistration.propTypes = {\n  registration: PropTypes.func.isRequired,\n  isBlockingForm: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(FormRegistration);\n","import FormRegistration from './Form-registration';\n\nexport default FormRegistration;\n","import * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string().required('Обязательное поле'),\n  email: Yup.string()\n    .email('Вводи правильно, адрес не коректен')\n    .required('Обязательное поле'),\n});\n\nexport default validationSchema;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport useStyles from '../styled';\nimport { getBlockingForm } from '../../../redux/selectors';\nimport validationSchema from './vadalition';\nimport * as actionsAuthentication from '../../../redux/actions/actionsAuthentication';\nimport { getSignup } from '../../../utils/route';\n\nconst FormAutorization = ({ authorization, isBlockingForm }) => {\n  const classes = useStyles();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmitAutorization = async (values, setFieldError) => {\n    try {\n      await authorization(values, setFieldError);\n    } catch (error) {\n      if (error.response === undefined && error.isAxiosError) {\n        setFieldError('errorName', 'Нет подключения к интернету');\n      } else {\n        setFieldError('password', 'Почта или пароль неверны');\n        setFieldError('email', 'Почта или пароль неверны');\n      }\n    }\n  };\n\n  return (\n    <div className={classes.form__container}>\n      <h1 className={classes.form__title}>Авторизация</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setFieldError }) => {\n          handleSubmitAutorization(values, setFieldError);\n        }}\n      >\n        {({\n          touched,\n          errors,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          values,\n          isValid,\n          dirty,\n        }) => (\n          <Form className={classes.form__user} onSubmit={handleSubmit}>\n            <Field\n              size=\"small\"\n              name=\"email\"\n              className={classes.form__user__data}\n              as=\"input\"\n              component={TextField}\n              label=\"Электронная почта\"\n              variant=\"outlined\"\n              onChange={handleChange('email')}\n              error={touched.email && Boolean(errors.email)}\n              helperText={touched.email && errors.email}\n              onBlur={handleBlur('email')}\n              required\n              value={values.email}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"password\"\n              className={classes.form__user__data}\n              component={TextField}\n              label=\"Пароль\"\n              variant=\"outlined\"\n              onChange={handleChange('password')}\n              type=\"password\"\n              error={touched.password && Boolean(errors.password)}\n              helperText={touched.password && errors.password}\n              onBlur={handleBlur('password')}\n              autoComplete=\"current-password\"\n              fullWidth\n              required\n              value={values.password}\n              disabled={isBlockingForm}\n            />\n            <Button\n              htmlType=\"submit\"\n              type=\"primary\"\n              disabled={!isValid || !dirty || isBlockingForm}\n            >\n              Вход\n            </Button>\n            {errors.errorName && (\n              <span className={classes.error__internet}>\n                {errors.errorName}\n              </span>\n            )}\n          </Form>\n        )}\n      </Formik>\n      <NavLink to={getSignup()}>Зарегистрироваться</NavLink>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isBlockingForm: getBlockingForm(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  authorization: actionsAuthentication.authorization,\n};\n\nFormAutorization.propTypes = {\n  isBlockingForm: PropTypes.bool.isRequired,\n  authorization: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(FormAutorization);\n","import FormAutorization from './Form-autorisation';\n\nexport default FormAutorization;\n","import * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Обязательное поле'),\n  description: Yup.string().required('Обязательное поле'),\n  body: Yup.string().required('Обязательное поле'),\n});\n\nexport default validationSchema;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './FormAddArticle.css';\nimport {\n  Formik, Form, Field, FieldArray,\n} from 'formik';\nimport { Button } from 'antd';\nimport { TextField, TextareaAutosize } from '@material-ui/core';\nimport { uniqueId } from 'lodash';\nimport validationSchema from './validation';\nimport useStyles from '../styled';\nimport { getBlockingForm } from '../../../redux/selectors';\nimport * as actionsArticles from '../../../redux/actions/actionsArticles';\n\nconst FormAddArticle = ({ createArticles, isBlockingForm }) => {\n  const [statusCreateArticle, setStatusCreateArticle] = useState(null);\n\n  const classes = useStyles();\n  const initialValues = {\n    title: '',\n    description: '',\n    body: '',\n    tags: '',\n    tagList: [],\n  };\n\n  const normalizeData = ({ tagList }) => {\n    const newTagList = tagList.filter(({ tags }) => tags !== '');\n    const arrTag = newTagList.reduce((acc, { tags }) => [...acc, tags], []);\n    return Array.from(new Set(arrTag));\n  };\n\n  const handleSubmitForm = async (values, { setFieldError }) => {\n    const { title, description, body } = values;\n    const arrTagList = normalizeData(values);\n    const articles = {\n      article: {\n        title,\n        description,\n        body,\n        tagList: arrTagList,\n      },\n    };\n\n    try {\n      await createArticles(articles);\n      setStatusCreateArticle(true);\n    } catch (error) {\n      if (error.isAxiosError) {\n        setFieldError('errorName', 'Нет подключения к интернету');\n      }\n    }\n  };\n\n  const returnForm = () => (\n    <div className={classes.form__container__addArticle}>\n      <h1 className={classes.form__title}>Новая статья</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmitForm}\n      >\n        {({\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          setFieldValue,\n          setFieldError,\n          values,\n          touched,\n          errors,\n          isValid,\n          dirty,\n        }) => (\n          <Form className={classes.form__user} onSubmit={handleSubmit}>\n            {touched.name && (\n              <span className=\"error__message\">{errors.name}</span>\n            )}\n            <Field\n              size=\"small\"\n              name=\"title\"\n              as=\"input\"\n              component={TextField}\n              className={classes.form__user__data}\n              label=\"Загаловок статьи\"\n              variant=\"outlined\"\n              onChange={handleChange('title')}\n              error={touched.title && Boolean(errors.title)}\n              helperText={touched.title && errors.title}\n              onBlur={handleBlur('title')}\n              required\n              value={values.title}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"description\"\n              as=\"input\"\n              component={TextField}\n              className={classes.form__user__data}\n              label=\"Краткое описание\"\n              variant=\"outlined\"\n              onChange={handleChange('description')}\n              error={touched.description && Boolean(errors.description)}\n              helperText={touched.description && errors.description}\n              onBlur={handleBlur('description')}\n              required\n              value={values.description}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"body\"\n              as=\"input\"\n              component={TextareaAutosize}\n              className={classes.form__user__body}\n              placeholder=\"Текст статьи\"\n              rows=\"10\"\n              variant=\"outlined\"\n              onChange={handleChange('body')}\n              onBlur={handleBlur('body')}\n              required\n              value={values.body}\n              disabled={isBlockingForm}\n            />\n            <span className={classes.error__internet}>\n              {touched.body ? errors.body : ''}\n            </span>\n            <FieldArray\n              name=\"tagList\"\n              // eslint-disable-next-line no-unused-vars\n              render={({ push, remove }) => (\n                <div className={classes.form__user__tagList}>\n                  <Field\n                    size=\"small\"\n                    name=\"tags\"\n                    as=\"input\"\n                    component={TextField}\n                    className={classes.form__user__body}\n                    placeholder=\"напишите тег\"\n                    rows=\"10\"\n                    variant=\"outlined\"\n                    onChange={handleChange('tags')}\n                    onBlur={handleBlur('tags')}\n                    value={values.tags}\n                    disabled={isBlockingForm}\n                  />\n                  {values.tagList.map((tag, index) => (\n                    <div key={tag.id}>\n                      <div className={classes.form__block__tags}>\n                        <span>{tag.tags}</span>\n                        <Button\n                          className={classes.form__user__btn__tags}\n                          onClick={() => remove(index)}\n                          disabled={isBlockingForm}\n                        >\n                          х\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                  <Button\n                    className={classes.form__user__btn}\n                    disabled={isBlockingForm}\n                    onClick={() => {\n                      if (values.tags.trim()) {\n                        values.tagList.push({\n                          id: uniqueId(),\n                          tags: values.tags,\n                        });\n                        setFieldValue('tags', '');\n                      } else {\n                        setFieldError('errorName', 'Тэг недолжен быть пустым');\n                      }\n                    }}\n                  >\n                    Добавить тэг\n                  </Button>\n                </div>\n              )}\n            />\n            {errors.errorName && (\n              <span className={classes.error__internet}>\n                {errors.errorName}\n              </span>\n            )}\n            <Button\n              className={classes.form__user__data}\n              htmlType=\"submit\"\n              type=\"primary\"\n              disabled={!isValid || !dirty || isBlockingForm}\n            >\n              Отправить\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n\n  const returnStatusCreate = () => (\n    <div>\n      <span>Ваша статья успешно добавлена</span>\n    </div>\n  );\n\n  return statusCreateArticle ? returnStatusCreate() : returnForm();\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isBlockingForm: getBlockingForm(state),\n  };\n  return props;\n};\n\nFormAddArticle.propTypes = {\n  createArticles: PropTypes.func.isRequired,\n  isBlockingForm: PropTypes.bool.isRequired,\n};\n\nconst actionCreators = {\n  createArticles: actionsArticles.createArticles,\n};\n\nexport default connect(mapStateToProps, actionCreators)(FormAddArticle);\n","import FormAddArticle from './FormAddArticle';\n\nexport default FormAddArticle;\n","import * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Обязательное поле'),\n  description: Yup.string().required('Обязательное поле'),\n  body: Yup.string().required('Обязательное поле'),\n});\n\nexport default validationSchema;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  Formik, Form, Field, FieldArray,\n} from 'formik';\nimport { Button, Input } from 'antd';\nimport { uniqueId } from 'lodash';\nimport { TextField, TextareaAutosize } from '@material-ui/core';\nimport validationSchema from './validation';\nimport useStyles from '../styled';\nimport { getBlockingForm, getArticleOne } from '../../../redux/selectors';\nimport * as actionsArticles from '../../../redux/actions/actionsArticles';\n\nconst FormEditArticle = ({ isBlockingForm, articleOne, editArticle }) => {\n  const [statusEditArticle, setStatusEditArticle] = useState(null);\n  const { article } = articleOne;\n  const classes = useStyles();\n\n  const normalizeData = ({ tagList }) => {\n    const newTagList = tagList.filter(({ tags }) => tags !== '');\n    const arrTag = newTagList.reduce((acc, { tags }) => [...acc, tags], []);\n    return Array.from(new Set(arrTag));\n  };\n  const formaTagList = () => {\n    const res = article.tagList.reduce((acc, item) => {\n      const id = uniqueId();\n      const tags = item;\n      acc.push({\n        id,\n        tags,\n      });\n\n      return acc;\n    }, []);\n    return res;\n  };\n\n  const initialValues = {\n    title: article.title,\n    description: article.description,\n    body: article.body,\n    tagList: formaTagList(),\n  };\n\n  const handleSubmitForm = async (values, { setFieldError }) => {\n    const { title, description, body } = values;\n    const arrTagList = normalizeData(values);\n    const articles = {\n      article: {\n        title,\n        description,\n        body,\n        tagList: arrTagList,\n      },\n    };\n\n    try {\n      await editArticle(articles, article.slug);\n      setStatusEditArticle(true);\n    } catch (error) {\n      if (error.response === undefined && error.isAxiosError) {\n        setFieldError('errorName', 'Нет подключения к интернету');\n      }\n    }\n  };\n\n  const returnForm = () => (\n    <div className={classes.form__container__addArticle}>\n      <h1 className={classes.form__title}>Редактировать статью</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmitForm}\n      >\n        {({\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          values,\n          touched,\n          errors,\n          isValid,\n          dirty,\n        }) => (\n          <Form className={classes.form__user} onSubmit={handleSubmit}>\n            {touched.name && (\n              <span className=\"error__message\">{errors.name}</span>\n            )}\n            <Field\n              size=\"small\"\n              name=\"title\"\n              as=\"input\"\n              component={TextField}\n              className={classes.form__user__data}\n              label=\"Загаловок статьи\"\n              variant=\"outlined\"\n              onChange={handleChange('title')}\n              error={touched.title && Boolean(errors.title)}\n              helperText={touched.title && errors.title}\n              onBlur={handleBlur('title')}\n              required\n              value={values.title}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"description\"\n              as=\"input\"\n              component={TextField}\n              className={classes.form__user__data}\n              label=\"Краткое описание\"\n              variant=\"outlined\"\n              onChange={handleChange('description')}\n              error={touched.description && Boolean(errors.description)}\n              helperText={touched.description && errors.description}\n              onBlur={handleBlur('description')}\n              required\n              value={values.description}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"body\"\n              as=\"input\"\n              component={TextareaAutosize}\n              className={classes.form__user__body}\n              placeholder=\"Текст статьи\"\n              rows=\"10\"\n              variant=\"outlined\"\n              onChange={handleChange('body')}\n              onBlur={handleBlur('body')}\n              required\n              value={values.body}\n              disabled={isBlockingForm}\n            />\n            <span className={classes.error__internet}>\n              {touched.body ? errors.body : ''}\n            </span>\n            <FieldArray\n              name=\"tagList\"\n              render={(arrayHelpers) => (\n                <div>\n                  {values.tagList.map((tags, index) => (\n                    <div key={tags.id}>\n                      <div className={classes.form__block__tags}>\n                        <Input\n                          className={classes.form__user__tags}\n                          name={`tagList.[${index}].tags`}\n                          onChange={handleChange}\n                          disabled={isBlockingForm}\n                          value={tags.tags}\n                        />\n                        <Button\n                          className={classes.form__user__btn__tags}\n                          onClick={() => arrayHelpers.remove(index)}\n                          disabled={isBlockingForm}\n                        >\n                          х\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                  <Button\n                    className={classes.form__user__btn}\n                    disabled={isBlockingForm}\n                    onClick={() => {\n                      arrayHelpers.push({ id: uniqueId(), tags: '' });\n                    }}\n                  >\n                    Добавить тэг\n                  </Button>\n                </div>\n              )}\n            />\n            {errors.errorName && (\n              <span className={classes.error__internet}>\n                {errors.errorName}\n              </span>\n            )}\n            <Button\n              className={classes.form__user__data}\n              htmlType=\"submit\"\n              type=\"primary\"\n              disabled={!isValid || !dirty || isBlockingForm}\n            >\n              Отправить\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n\n  const returnStatusCreate = () => (\n    <div>\n      <span>Ваша статья успешно обновлена</span>\n    </div>\n  );\n\n  return statusEditArticle ? returnStatusCreate() : returnForm();\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isBlockingForm: getBlockingForm(state),\n    articleOne: getArticleOne(state),\n  };\n  return props;\n};\n\nFormEditArticle.propTypes = {\n  createArticles: PropTypes.func.isRequired,\n  editArticle: PropTypes.func.isRequired,\n  isBlockingForm: PropTypes.bool.isRequired,\n  articleOne: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.number,\n    PropTypes.object,\n  ]).isRequired,\n};\n\nconst actionCreators = {\n  createArticles: actionsArticles.createArticles,\n  getArticles: actionsArticles.getArticles,\n  editArticle: actionsArticles.editArticle,\n};\n\nexport default connect(mapStateToProps, actionCreators)(FormEditArticle);\n","import FormEditArticle from './FormEditArticle';\n\nexport default FormEditArticle;\n","import { formatDistanceToNow } from 'date-fns';\nimport { ru } from 'date-fns/locale';\n\nconst formatDate = (date) => formatDistanceToNow(new Date(date), { locale: ru });\n\nexport default formatDate;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FavoriteBorder, Favorite } from '@material-ui/icons';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getIsAuth } from '../../../redux/selectors';\nimport * as actionsArticles from '../../../redux/actions/actionsArticles';\nimport formatDate from '../../../utils/formatDate';\nimport './Article.css';\n\nconst Article = ({\n  article, unfavoriteArticle, favoriteArticle, isAuth,\n}) => {\n  const { favorited, slug } = article;\n  const handleClikLikBtn = () => {\n    if (favorited) {\n      unfavoriteArticle(slug);\n    } else {\n      favoriteArticle(slug);\n    }\n  };\n\n  const returnAddLike = () => (\n    <div className=\"info__container\">\n      <Tooltip title=\"убрать лайк\">\n        <Favorite\n          color=\"secondary\"\n          onClick={handleClikLikBtn}\n          className=\"info__like\"\n        />\n      </Tooltip>\n      <span>{article.favoritesCount}</span>\n    </div>\n  );\n\n  const returnNotLike = () => (\n    <div className=\"info__container\">\n      <Tooltip title=\"авторизуйтесь пожалуйста\">\n        {article.favoritesCount > 0 ? (\n          <Favorite color=\"secondary\" className=\"info__like\" />\n        ) : (\n          <FavoriteBorder color=\"secondary\" className=\"info__like\" />\n        )}\n      </Tooltip>\n      <span>{article.favoritesCount}</span>\n    </div>\n  );\n\n  const returnDeletetLike = () => (\n    <div className=\"info__container\">\n      <Tooltip title=\"поставить лайк\">\n        <FavoriteBorder\n          color=\"secondary\"\n          onClick={handleClikLikBtn}\n          className=\"info__like\"\n        />\n      </Tooltip>\n      <span>{article.favoritesCount}</span>\n    </div>\n  );\n\n  const Lick = () => {\n    if (!isAuth) {\n      return returnNotLike();\n    }\n    return article.favorited ? returnAddLike() : returnDeletetLike();\n  };\n\n  return (\n    <div className=\"article__list\">\n      <div className=\"article__wraper\">\n        <span className=\"article__title\">{article.title}</span>\n        <span className=\"article__author\">\n          автор:\n          <span className=\"article__author__name\">\n            {article.author.username}\n          </span>\n          <img\n            className=\"image__user\"\n            alt=\"картинка пользователя\"\n            src={article.author.image}\n          />\n        </span>\n      </div>\n      {article.tagList && (\n        <div className=\"article__tagList\">\n          {article.tagList.map((item) => (\n            <span key={item} className=\"article__tagList__item\">\n              {item}\n            </span>\n          ))}\n        </div>\n      )}\n      <span className=\"article__generated\">\n        создано:\n        <span className=\"article__generated__time\">\n          {`${formatDate(article.createdAt)} назад`}\n        </span>\n      </span>\n      {article.updatedAt === article.createdAt ? (\n        ''\n      ) : (\n        <span className=\"article__generated\">\n          изменено:\n          <span className=\"article__generated__time\">\n            {`${formatDate(article.updatedAt)} назад`}\n          </span>\n        </span>\n      )}\n      <Lick />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isAuth: getIsAuth(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  favoriteArticle: actionsArticles.favoriteArticle,\n  unfavoriteArticle: actionsArticles.unfavoriteArticle,\n};\n\nArticle.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  article: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.number,\n    PropTypes.object,\n  ]).isRequired,\n  unfavoriteArticle: PropTypes.func.isRequired,\n  favoriteArticle: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(Article);\n","import Article from './Article';\n\nexport default Article;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Pagination from '@material-ui/lab/Pagination';\nimport {\n  getArticlesList,\n  getUsername,\n  getIsErrorInternet,\n  getIsAuth,\n} from '../../../redux/selectors';\nimport * as actionsArticles from '../../../redux/actions/actionsArticles';\nimport * as actionsAuthentication from '../../../redux/actions/actionsAuthentication';\nimport Article from '../Article';\nimport './ArticlesList.css';\n\nconst ArticlesList = ({\n  isAuth,\n  articlesList,\n  getArticle,\n  getArticles,\n  userArticles,\n  username,\n  isErrorInternet,\n}) => {\n  const history = useHistory();\n  const { articles, articlesCount, userArticle } = articlesList;\n\n  const hanleClckArticle = async (event, slug) => {\n    if (!isAuth) {\n      return;\n    }\n\n    if (\n      event.target.parentElement.classList.contains('info__like')\n      || event.target.parentElement.classList.contains('info__container')\n    ) {\n      return;\n    }\n\n    getArticle(slug, history);\n  };\n\n  const handleChangePagination = async (event, page) => {\n    const countOffset = page * 10 - 10;\n    return userArticle\n      ? userArticles(username, countOffset)\n      : getArticles(countOffset);\n  };\n\n  return (\n    <div className=\"articles\">\n      {isErrorInternet && (\n        <span className=\"error__internet\">Нет подключения к интернету</span>\n      )}\n      {articles\n        && articles.map((item) => {\n          const { slug } = item;\n          return (\n            <div\n              key={slug}\n              className=\"article__container\"\n              onKeyDown={(event) => hanleClckArticle(event, slug)}\n              tabIndex={0}\n              onClick={(event) => hanleClckArticle(event, slug)}\n              role=\"button\"\n            >\n              <Article article={item} hanleClckArticle={hanleClckArticle} />\n            </div>\n          );\n        })}\n      <Pagination\n        count={Math.ceil(articlesCount / 10)}\n        onChange={handleChangePagination}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isAuth: getIsAuth(state),\n    articlesList: getArticlesList(state),\n    username: getUsername(state),\n    isErrorInternet: getIsErrorInternet(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  getUser: actionsAuthentication.getUser,\n  setLoginSuccess: actionsAuthentication.setLoginSuccess,\n  getArticles: actionsArticles.getArticles,\n  getArticle: actionsArticles.getArticle,\n  userArticles: actionsArticles.userArticles,\n};\n\nArticlesList.propTypes = {\n  articlesList: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.number,\n    PropTypes.object,\n  ]).isRequired,\n  isAuth: PropTypes.bool.isRequired,\n  username: PropTypes.string.isRequired,\n  getArticle: PropTypes.func.isRequired,\n  getArticles: PropTypes.func.isRequired,\n  userArticles: PropTypes.func.isRequired,\n  isErrorInternet: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(ArticlesList);\n","import ArticlesList from './ArticlesList';\n\nexport default ArticlesList;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { uniqueId } from 'lodash';\nimport { FavoriteBorder, Favorite } from '@material-ui/icons';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {\n  getArticleOne,\n  getUsername,\n  getIsAuth,\n  getIsErrorInternet,\n} from '../../../redux/selectors';\nimport * as actionsArticles from '../../../redux/actions/actionsArticles';\nimport formatDate from '../../../utils/formatDate';\nimport { getEdit } from '../../../utils/route';\nimport './ViewArticle.css';\n\nconst ViewArticle = ({\n  articleOne,\n  username,\n  isAuth,\n  favoriteArticle,\n  unfavoriteArticle,\n  deleteArticle,\n  isErrorInternet,\n}) => {\n  const history = useHistory();\n  const [statusDeleteArticle, setStatusDeleteArticle] = useState(null);\n  const { article } = articleOne;\n  const handleClickBtnLike = () => {\n    const { favorited, slug } = article;\n    return favorited ? unfavoriteArticle(slug) : favoriteArticle(slug);\n  };\n\n  const handleClickBtnDelete = async () => {\n    await deleteArticle(article.slug);\n    setStatusDeleteArticle(true);\n  };\n\n  const handleClickBtnEdit = () => {\n    history.push(getEdit(article.slug));\n  };\n\n  const returnLike = () => (\n    <li className=\"view__data\">\n      <Tooltip title=\"убрать лайк\">\n        <Favorite color=\"secondary\" onClick={handleClickBtnLike} />\n      </Tooltip>\n      <span>{article.favoritesCount}</span>\n    </li>\n  );\n\n  const returnNotLike = () => (\n    <li className=\"view__data\">\n      <Tooltip title=\"поставить лайк\">\n        <FavoriteBorder color=\"secondary\" onClick={handleClickBtnLike} />\n      </Tooltip>\n      <span>{article.favoritesCount}</span>\n    </li>\n  );\n\n  const returnArticle = () => (\n    <div className=\"container__view\">\n      {isErrorInternet && (\n        <span className=\"error__internet\">Нет подключения к интернету</span>\n      )}\n      {isAuth && username === article.author.username ? (\n        <div className=\"view__wrapper__btn\">\n          <Button className=\"view__btn\" onClick={handleClickBtnEdit}>\n            редактировать\n          </Button>\n          <Button className=\"view__btn\" onClick={handleClickBtnDelete}>\n            удалить\n          </Button>\n        </div>\n      ) : (\n        ''\n      )}\n      <div className=\"container__wrapper__view\">\n        <ul className=\"view__list\">\n          <li className=\"view__data\">\n            <span className=\"data__description\">заголовок: </span>\n            {article.title}\n          </li>\n          <li className=\"view__data\">\n            <span className=\"data__description\">автор: </span>\n            {article.author.username}\n          </li>\n          <li className=\"view__data\">\n            <span className=\"data__description\">краткое описание: </span>\n            {article.description}\n          </li>\n          <li className=\"view__data\">\n            <span className=\"data__description\">статья: </span>\n            {article.body}\n          </li>\n          <li className=\"view__data\">\n            <span className=\"data__description\">дата создания статьи: </span>\n            {formatDate(article.createdAt)}\n          </li>\n          {article.updatedAt === article.createdAt ? (\n            ''\n          ) : (\n            <li className=\"view__data\">\n              <span className=\"data__description\">дата изменения статьи: </span>\n              {formatDate(article.updatedAt)}\n            </li>\n          )}\n          {article.tagList.map((tag) => (\n            <li key={uniqueId()} className=\"view__data\">\n              {tag}\n            </li>\n          ))}\n          {article.favorited ? returnLike() : returnNotLike()}\n        </ul>\n      </div>\n    </div>\n  );\n\n  const returnStatusDelete = () => (\n    <div>\n      <span>Ваша статья успешно удалена</span>\n    </div>\n  );\n\n  return statusDeleteArticle ? returnStatusDelete() : returnArticle();\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    articleOne: getArticleOne(state),\n    username: getUsername(state),\n    isAuth: getIsAuth(state),\n    isErrorInternet: getIsErrorInternet(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  favoriteArticle: actionsArticles.favoriteArticle,\n  unfavoriteArticle: actionsArticles.unfavoriteArticle,\n  deleteArticle: actionsArticles.deleteArticle,\n};\n\nViewArticle.propTypes = {\n  articleOne: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.number,\n    PropTypes.object,\n  ]).isRequired,\n  username: PropTypes.string.isRequired,\n  isAuth: PropTypes.bool.isRequired,\n  isErrorInternet: PropTypes.bool.isRequired,\n  unfavoriteArticle: PropTypes.func.isRequired,\n  favoriteArticle: PropTypes.func.isRequired,\n  deleteArticle: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(ViewArticle);\n","import ViewArticle from './ViewArticle';\n\nexport default ViewArticle;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { getUsername } from '../../redux/selectors';\nimport * as actionsArticles from '../../redux/actions/actionsArticles';\nimport * as actionsAuthentication from '../../redux/actions/actionsAuthentication';\nimport './Home.css';\nimport { clearLocalstoge } from '../../utils/localStorage';\nimport { getAdd, getLogin, getBlogging } from '../../utils/route';\n\nconst Houme = ({\n  username, setLoginExit, getArticles, userArticles,\n}) => {\n  const handleClickExit = () => {\n    setLoginExit();\n    clearLocalstoge();\n  };\n\n  const handleClickAllArticles = () => {\n    getArticles();\n  };\n\n  const handleClickUserArticles = () => {\n    userArticles(username);\n  };\n\n  return (\n    <div className=\"wrapper__houme\">\n      <h1 className=\"title\">Личный кабинет</h1>\n      <span className=\"name\">{username}</span>\n      <div className=\"houme__block__btn\">\n        <Button\n          className=\"houme__btn__articles\"\n          onClick={handleClickAllArticles}\n        >\n          <NavLink className=\"btn__text\" to={getBlogging()}>\n            Показать все статьи\n          </NavLink>\n        </Button>\n        <Button\n          className=\"houme__btn__articles\"\n          onClick={handleClickUserArticles}\n        >\n          <NavLink className=\"btn__text\" to={getBlogging()}>\n            Показать мои статьи\n          </NavLink>\n        </Button>\n        <Button className=\"houme__btn__articles\">\n          <NavLink className=\"btn__text\" to={getAdd()}>\n            Добавить статью\n          </NavLink>\n        </Button>\n      </div>\n      <Button className=\"houme__btn__exit\" onClick={handleClickExit}>\n        <NavLink to={getLogin()}>Выход</NavLink>\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    username: getUsername(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  setLoginExit: actionsAuthentication.setLoginExit,\n  getArticles: actionsArticles.getArticles,\n  userArticles: actionsArticles.userArticles,\n};\n\nHoume.propTypes = {\n  username: PropTypes.string.isRequired,\n  setLoginExit: PropTypes.func.isRequired,\n  getArticles: PropTypes.func.isRequired,\n  userArticles: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(Houme);\n","import Houme from './Home';\n\nexport default Houme;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Route, useHistory, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from '../Header';\nimport { getIsAuth } from '../../redux/selectors';\nimport FormRegistration from '../forms/form-registration';\nimport FormAutorization from '../forms/form-autorisation';\nimport FormAddArticle from '../forms/form-add-article';\nimport FormEditArticle from '../forms/form-edit-article';\nimport ArticlesList from '../articles/articles-list';\nimport ViewArticle from '../articles/view-article';\nimport Home from '../Home';\nimport { getToken } from '../../utils/localStorage';\nimport {\n  getBlogging,\n  getLogin,\n  getSignup,\n  getAdd,\n  getSlug,\n  getEdit,\n} from '../../utils/route';\nimport * as actionsAuthentication from '../../redux/actions/actionsAuthentication';\nimport * as actionsArticles from '../../redux/actions/actionsArticles';\n\nconst App = ({\n  isAuth, getUser, setLoginSuccess, getArticles,\n}) => {\n  const history = useHistory();\n\n  const fetchPath = async () => {\n    const token = getToken();\n    if (token) {\n      await getUser(history);\n      await setLoginSuccess();\n      await getArticles();\n    } else {\n      history.push(getSignup());\n      getArticles();\n    }\n  };\n\n  useEffect(() => {\n    fetchPath();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Route path={getBlogging()} component={Header} />\n      <div className=\"wrapper_container\">\n        <div className=\"sitebar\">\n          <Switch>\n            {isAuth && <Route path={getBlogging()} component={Home} />}\n            <Route path={getLogin()} component={FormAutorization} />\n            <Route path={getSignup()} component={FormRegistration} />\n          </Switch>\n        </div>\n        <Switch>\n          <Route exact path={getSlug()} component={ViewArticle} />\n          <Route path={getSignup()} component={ArticlesList} />\n          <Route path={getLogin()} component={ArticlesList} />\n          <Route exact path={getBlogging()} component={ArticlesList} />\n        </Switch>\n        <Route exact path={getAdd()} component={FormAddArticle} />\n        <Route exact path={getEdit()} component={FormEditArticle} />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isAuth: getIsAuth(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  getUser: actionsAuthentication.getUser,\n  setLoginSuccess: actionsAuthentication.setLoginSuccess,\n  getArticles: actionsArticles.getArticles,\n};\n\nApp.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  getUser: PropTypes.func.isRequired,\n  setLoginSuccess: PropTypes.func.isRequired,\n  getArticles: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(App);\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport redusers from './redux/redusers';\nimport '@csstools/normalize.css';\nimport 'antd/dist/antd.css';\nimport App from './components/App';\n\nconst store = createStore(redusers, compose(applyMiddleware(thunk)));\nconst Main = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route component={App} />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}