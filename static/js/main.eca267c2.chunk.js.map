{"version":3,"sources":["utils/localStorage.js","api/index.js","redux/actions.js","utils/route.js","redux/redusers.js","redux/selectors.js","components/Header/Header.jsx","components/Header/index.js","components/form-registration/vadalition.js","components/form-registration/Form-registration.jsx","components/form-registration/index.js","components/form-autorisation/vadalition.js","components/form-autorisation/Form-autorisation.jsx","components/form-autorisation/index.js","components/Articles/Articles.jsx","components/Articles/index.js","components/Home/Home.jsx","components/Home/index.js","components/App/App.jsx","components/App/index.js","index.jsx"],"names":["getToken","localStorage","getItem","clearLocalstoge","clear","setToken","token","setItem","baseUrl","instance","axios","create","interceptors","request","use","config","userConfig","headers","Authorization","userRequest","url","get","loginRequest","values","regData","user","username","email","password","post","signupRequest","autData","setSignUpRequest","createAction","setSignUpSuccess","setSignUpFailure","setLoginRequest","setLoginSuccess","setLoginFailure","setUserRequest","setUserSuccess","setUserFailure","loginData","setLoginExit","getUser","history","dispatch","a","response","data","push","handleActions","actions","state","payload","isAuth","isBlockingForm","combineReducers","getIsAuth","getUsername","getBlockingForm","actionCreators","Header","connect","handleClickExit","className","path","component","onClick","to","validationSchema","Yup","shape","max","min","required","matches","useStyles","makeStyles","theme","wrapper__registration","display","justifyContent","flexDirection","alignItems","padding","spacing","title","textTransform","textAlign","margin","marginTop","fontSize","registration","alignContent","width","registration__data","marginBottom","error__internet","color","status","FormRegistration","classes","handleSubmitRegistration","setFieldError","undefined","isAxiosError","errors","initialValues","onSubmit","touched","handleSubmit","handleBlur","handleChange","dirty","isValid","size","name","as","TextField","label","variant","onChange","error","Boolean","helperText","onBlur","value","disabled","type","autoComplete","fullWidth","htmlType","errorName","authorization","FormAutorization","handleSubmitAutorization","Articles","Houme","App","useHistory","useEffect","Home","store","createStore","redusers","compose","applyMiddleware","thunk","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eca267c2.chunk.js","sourcesContent":["export const getToken = () => {\n  const token = localStorage.getItem('token');\n  return token;\n};\n\nexport const clearLocalstoge = () => {\n  localStorage.clear();\n};\n\nexport const setToken = (token) => {\n  localStorage.setItem('token', `${token}`);\n};\n","import axios from 'axios';\nimport { getToken } from '../utils/localStorage';\n\nexport const baseUrl = 'https://conduit.productionready.io/api/';\n\nexport const instance = axios.create();\n\ninstance.interceptors.request.use((config) => {\n  const userConfig = config;\n  userConfig.headers.Authorization = `Token ${getToken()}`;\n  return userConfig;\n});\n\nexport const userRequest = () => {\n  const url = `${baseUrl}user`;\n  const response = instance.get(url);\n  return response;\n};\n\nexport const loginRequest = (values) => {\n  const { username, email, password } = values;\n  const regData = {\n    user: {\n      username,\n      email,\n      password,\n    },\n  };\n\n  const url = `${baseUrl}users`;\n  const response = axios.post(url, regData);\n  return response;\n};\n\nexport const signupRequest = (values) => {\n  const { email, password } = values;\n  const autData = {\n    user: {\n      email,\n      password,\n    },\n  };\n  const url = `${baseUrl}users/login`;\n  const response = axios.post(url, autData);\n  return response;\n};\n","import { createAction } from 'redux-actions';\nimport { loginRequest, signupRequest, userRequest } from '../api/index';\nimport { setToken } from '../utils/localStorage';\nimport { getHome, getSignup } from '../utils/route';\n\nexport const setSignUpRequest = createAction('STATUS_SIGNUP_REQUEST');\nexport const setSignUpSuccess = createAction('STATUS_SIGNUP_SUCCESS');\nexport const setSignUpFailure = createAction('STATUS_SIGNUP_FAILURE');\n\nexport const setLoginRequest = createAction('STATUS_LOGIN_REQUEST');\nexport const setLoginSuccess = createAction('STATUS_LOGIN_SUCCESS');\nexport const setLoginFailure = createAction('STATUS_LOGIN_FAILURE');\n\nexport const setUserRequest = createAction('STATUS_USER_REQUEST');\nexport const setUserSuccess = createAction('STATUS_USER_SUCCESS');\nexport const setUserFailure = createAction('STATUS_USER_FAILURE');\n\nexport const loginData = createAction('LOGIN_DATA');\nexport const setLoginExit = createAction('LOGIN_EXIT');\nexport const getRequest = createAction('REQUEST_DATA');\n\nexport const getUser = (history) => async (dispatch) => {\n  dispatch(setUserRequest());\n  try {\n    const response = await userRequest();\n    dispatch(setUserSuccess());\n    dispatch(loginData(response.data));\n    history.push(getHome());\n  } catch (error) {\n    dispatch(setUserFailure());\n    history.push(getSignup());\n  }\n};\n\nexport const authorization = (values) => async (dispatch) => {\n  dispatch(setSignUpRequest());\n  try {\n    const response = await signupRequest(values);\n    const { token } = response.data.user;\n    setToken(token);\n    dispatch(setSignUpSuccess());\n  } catch (error) {\n    dispatch(setSignUpFailure());\n    throw error;\n  }\n};\n\nexport const registration = (values) => async (dispatch) => {\n  dispatch(setLoginRequest());\n  try {\n    const response = await loginRequest(values);\n    if (response.status === 200) {\n      const { token } = response.data.user;\n      localStorage.setItem('token', `${token}`);\n      dispatch(setLoginSuccess());\n    }\n  } catch (error) {\n    dispatch(setLoginFailure());\n    throw error;\n  }\n};\n","export const getBlogging = () => '/blogging-platform';\n\nexport const getHome = () => '/blogging-platform/home';\n\nexport const getLogin = () => '/blogging-platform/login';\n\nexport const getSignup = () => '/blogging-platform/signup';\n","import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from './actions';\n\nconst username = handleActions(\n  {\n    [actions.loginData](state, { payload: login }) {\n      return login.user.username;\n    },\n  },\n  '',\n);\n\nconst isAuth = handleActions(\n  {\n    [actions.setLoginSuccess]() {\n      return true;\n    },\n    [actions.setSignUpSuccess]() {\n      return true;\n    },\n    [actions.setUserSuccess]() {\n      return true;\n    },\n    [actions.setLoginFailure]() {\n      return false;\n    },\n    [actions.setSignUpFailure]() {\n      return false;\n    },\n    [actions.setUserFailure]() {\n      return false;\n    },\n    [actions.setLoginExit]() {\n      return false;\n    },\n  },\n  false,\n);\n\nconst isBlockingForm = handleActions(\n  {\n    [actions.setLoginRequest]() {\n      return true;\n    },\n    [actions.setSignUpRequest]() {\n      return true;\n    },\n    [actions.setUserSuccess]() {\n      return false;\n    },\n    [actions.setLoginFailure]() {\n      return false;\n    },\n    [actions.setSignUpFailure]() {\n      return false;\n    },\n    [actions.setUserFailure]() {\n      return false;\n    },\n  },\n  false,\n);\n\nexport default combineReducers({\n  isAuth,\n  username,\n  isBlockingForm,\n});\n","export const getIsAuth = (state) => state.isAuth;\nexport const getUsername = (state) => state.username;\nexport const getBlockingForm = (state) => state.isBlockingForm;\nexport const getIsINternetError = (state) => state.isInternetError;\n","import React from 'react';\nimport './Header.css';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport { getIsAuth } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\nimport { clearLocalstoge } from '../../utils/localStorage';\nimport { getHome, getLogin, getSignup } from '../../utils/route';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isAuth: getIsAuth(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  setLoginExit: actions.setLoginExit,\n};\n\nconst Header = ({ setLoginExit }) => {\n  const handleClickExit = () => {\n    setLoginExit();\n    clearLocalstoge();\n  };\n\n  const Login = () => (\n    <Button className=\"header__btn\" onClick={handleClickExit}>\n      <NavLink to={getLogin()}>Войти</NavLink>\n    </Button>\n  );\n  const Signup = () => (\n    <Button className=\"header__btn\" onClick={handleClickExit}>\n      <NavLink to={getSignup()}>Регистрация</NavLink>\n    </Button>\n  );\n\n  const Exit = () => (\n    <Button className=\"header__btn\" onClick={handleClickExit}>\n      <NavLink to={getSignup()}>Выход</NavLink>\n    </Button>\n  );\n\n  return (\n    <div className=\"header\">\n      <Switch>\n        <Route path={getSignup()} component={Login} />\n        <Route path={getLogin()} component={Signup} />\n        <Route path={getHome()} component={Exit} />\n      </Switch>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  setLoginExit: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(Header);\n","import Header from './Header';\n\nexport default Header;\n","import * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .max(50, 'Что-то слишком длинное имя')\n    .min(2, 'Слишком короткое имя')\n    .required('Обязательное поле'),\n  password: Yup.string()\n    .min(8, 'Не менее 8 символов')\n    .max(40, 'Ну может покороче пароль придумаете?')\n    .required('Обязательное поле')\n    .matches(\n      /(?=.*[0-9])(?=.*[A-Z])[a-z0-9A-Z]/,\n      'буквы латинского алфавита и цифры, от 8 до 40 символов, как минимум одна цифра и одна заглавная буква',\n    ),\n  email: Yup.string()\n    .email('Вводи правильно, адрес не коректен')\n    .required('Обязательное поле'),\n});\n\nexport default validationSchema;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport './form-registration.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getBlockingForm } from '../../redux/selectors';\nimport validationSchema from './vadalition';\nimport * as actions from '../../redux/actions';\nimport { getLogin } from '../../utils/route';\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper__registration: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n\n  title: {\n    textTransform: 'uppercase',\n    textAlign: 'center',\n    margin: 0,\n    marginTop: theme.spacing(1),\n    '@media(maxWidth: 1200px)': {\n      fontSize: 18,\n    },\n  },\n\n  registration: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignContent: 'center',\n    padding: theme.spacing(2),\n    width: 350,\n  },\n\n  registration__data: {\n    marginBottom: theme.spacing(2),\n  },\n\n  error__internet: {\n    textAlign: 'center',\n    color: 'red',\n  },\n}));\n\nconst actionCreators = {\n  registration: actions.registration,\n};\n\nconst FormRegistration = ({ registration, isBlockingForm }) => {\n  const classes = useStyles();\n  const initialValues = {\n    username: '',\n    email: '',\n    password: '',\n  };\n\n  const handleSubmitRegistration = async (values, { setFieldError }) => {\n    try {\n      await registration(values, setFieldError);\n    } catch (error) {\n      if (error.response === undefined && error.isAxiosError) {\n        setFieldError('errorName', 'Нет подключения к интернету');\n      }\n      if (error.response.data.errors.username) {\n        setFieldError(\n          'username',\n          'Пользователь с таким именем уже зарегистрирован',\n        );\n      }\n      if (error.response.data.errors.email) {\n        setFieldError(\n          'email',\n          'Пользователь с такой почтой уже зарегистрирован',\n        );\n      }\n    }\n  };\n\n  return (\n    <div className={classes.wrapper__registration}>\n      <h1 className={classes.title}>регистрация</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmitRegistration}\n      >\n        {({\n          touched,\n          errors,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          values,\n          dirty,\n          isValid,\n        }) => (\n          <Form className={classes.registration} onSubmit={handleSubmit}>\n            <Field\n              size=\"small\"\n              name=\"username\"\n              className={classes.registration__data}\n              as=\"input\"\n              component={TextField}\n              label=\"Имя\"\n              variant=\"outlined\"\n              onChange={handleChange('username')}\n              error={touched.username && Boolean(errors.username)}\n              helperText={touched.username && errors.username}\n              onBlur={handleBlur('username')}\n              required\n              value={values.username}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"email\"\n              className={classes.registration__data}\n              as=\"input\"\n              component={TextField}\n              label=\"Электронная почта\"\n              variant=\"outlined\"\n              onChange={handleChange('email')}\n              error={touched.email && Boolean(errors.email)}\n              helperText={touched.email && errors.email}\n              onBlur={handleBlur('email')}\n              required\n              value={values.email}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"password\"\n              className={classes.registration__data}\n              component={TextField}\n              label=\"Пароль\"\n              variant=\"outlined\"\n              onChange={handleChange('password')}\n              type=\"password\"\n              error={touched.password && Boolean(errors.password)}\n              helperText={touched.password && errors.password}\n              onBlur={handleBlur('password')}\n              autoComplete=\"current-password\"\n              fullWidth\n              required\n              value={values.password}\n              disabled={isBlockingForm}\n            />\n            <Button\n              htmlType=\"submit\"\n              type=\"primary\"\n              disabled={!isValid || !dirty || isBlockingForm}\n            >\n              Зарегистрироваться\n            </Button>\n            {errors.errorName && (\n              <span className={classes.error__internet}>\n                {errors.errorName}\n              </span>\n            )}\n          </Form>\n        )}\n      </Formik>\n      <NavLink to={getLogin()}>Войти</NavLink>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isBlockingForm: getBlockingForm(state),\n  };\n  return props;\n};\n\nFormRegistration.propTypes = {\n  registration: PropTypes.func.isRequired,\n  isBlockingForm: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(FormRegistration);\n","import FormRegistration from './Form-registration';\n\nexport default FormRegistration;\n","import * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string().required('Обязательное поле'),\n  email: Yup.string()\n    .email('Вводи правильно, адрес не коректен')\n    .required('Обязательное поле'),\n});\n\nexport default validationSchema;\n","/* eslint-disable react/no-unused-prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport './form-autorization.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getBlockingForm } from '../../redux/selectors';\nimport validationSchema from './vadalition';\nimport * as actions from '../../redux/actions';\nimport { getSignup } from '../../utils/route';\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper__registration: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n\n  title: {\n    textTransform: 'uppercase',\n    textAlign: 'center',\n    margin: 0,\n    marginTop: theme.spacing(1),\n    '@media(maxWidth: 1200px)': {\n      fontSize: 18,\n    },\n  },\n\n  registration: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignContent: 'center',\n    padding: theme.spacing(2),\n    width: 350,\n  },\n\n  registration__data: {\n    marginBottom: theme.spacing(2),\n  },\n\n  error__internet: {\n    textAlign: 'center',\n    color: 'red',\n  },\n}));\n\nconst actionCreators = {\n  authorization: actions.authorization,\n};\n\nconst FormAutorization = ({ authorization, isBlockingForm }) => {\n  const classes = useStyles();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmitAutorization = async (values, setFieldError) => {\n    try {\n      await authorization(values, setFieldError);\n    } catch (error) {\n      if (error.response === undefined && error.isAxiosError) {\n        setFieldError('errorName', 'Нет подключения к интернету');\n      } else {\n        setFieldError('password', 'Почта или пароль неверны');\n        setFieldError('email', 'Почта или пароль неверны');\n      }\n    }\n  };\n\n  return (\n    <div className={classes.wrapper__registration}>\n      <h1 className={classes.title}>Авторизация</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setFieldError }) => {\n          handleSubmitAutorization(values, setFieldError);\n        }}\n      >\n        {({\n          touched,\n          errors,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          values,\n          isValid,\n          dirty,\n        }) => (\n          <Form className={classes.registration} onSubmit={handleSubmit}>\n            <Field\n              size=\"small\"\n              name=\"email\"\n              className={classes.registration__data}\n              as=\"input\"\n              component={TextField}\n              label=\"Электронная почта\"\n              variant=\"outlined\"\n              onChange={handleChange('email')}\n              error={touched.email && Boolean(errors.email)}\n              helperText={touched.email && errors.email}\n              onBlur={handleBlur('email')}\n              required\n              value={values.email}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"password\"\n              className={classes.registration__data}\n              component={TextField}\n              label=\"Пароль\"\n              variant=\"outlined\"\n              onChange={handleChange('password')}\n              type=\"password\"\n              error={touched.password && Boolean(errors.password)}\n              helperText={touched.password && errors.password}\n              onBlur={handleBlur('password')}\n              autoComplete=\"current-password\"\n              fullWidth\n              required\n              value={values.password}\n              disabled={isBlockingForm}\n            />\n            <Button\n              htmlType=\"submit\"\n              type=\"primary\"\n              disabled={!isValid || !dirty || isBlockingForm}\n            >\n              Вход\n            </Button>\n            {errors.errorName && (\n              <span className={classes.error__internet}>\n                {errors.errorName}\n              </span>\n            )}\n          </Form>\n        )}\n      </Formik>\n      <NavLink to={getSignup()}>Зарегистрироваться</NavLink>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isBlockingForm: getBlockingForm(state),\n  };\n  return props;\n};\n\nFormAutorization.propTypes = {\n  isBlockingForm: PropTypes.bool.isRequired,\n  authorization: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(FormAutorization);\n","import FormAutorization from './Form-autorisation';\n\nexport default FormAutorization;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getIsAuth } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\nimport './Articles.css';\n\nconst Articles = () => <div className=\"articles\">статьи</div>;\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isAuth: getIsAuth(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  getUser: actions.getUser,\n  setLoginSuccess: actions.setLoginSuccess,\n};\n\nexport default connect(mapStateToProps, actionCreators)(Articles);\n","import Articles from './Articles';\n\nexport default Articles;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { getUsername } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\nimport './Home.css';\nimport { clearLocalstoge } from '../../utils/localStorage';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    username: getUsername(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  setLoginExit: actions.setLoginExit,\n};\n\nconst Houme = ({ username, setLoginExit }) => {\n  const handleClick = () => {\n    setLoginExit();\n    clearLocalstoge();\n  };\n\n  return (\n    <div className=\"wrapper__houme\">\n      <h1 className=\"title\">Личный кабинет</h1>\n      <span className=\"name\">{username}</span>\n      <Button className=\"houme__btn\" onClick={handleClick}>\n        <NavLink to=\"/blogging-platform/login\">Выход</NavLink>\n      </Button>\n    </div>\n  );\n};\n\nHoume.propTypes = {\n  username: PropTypes.string.isRequired,\n  setLoginExit: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(Houme);\n","import Houme from './Home';\n\nexport default Houme;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Route, useHistory } from 'react-router-dom';\nimport './App.css';\nimport Header from '../Header';\nimport { getIsAuth } from '../../redux/selectors';\nimport FormRegistration from '../form-registration';\nimport FormAutorization from '../form-autorisation';\nimport Articles from '../Articles';\nimport Home from '../Home';\nimport { getToken } from '../../utils/localStorage';\nimport {\n  getBlogging, getHome, getLogin, getSignup,\n} from '../../utils/route';\nimport * as actions from '../../redux/actions';\n\nconst App = ({ isAuth, getUser, setLoginSuccess }) => {\n  const history = useHistory();\n\n  const fetchPath = () => {\n    const token = getToken();\n    if (token) {\n      getUser(history);\n      setLoginSuccess();\n    } else {\n      history.push(getSignup());\n    }\n  };\n\n  useEffect(() => {\n    fetchPath();\n  }, [isAuth]);\n\n  return (\n    <div className=\"container\">\n      <Route path={getBlogging()} component={Header} />\n      <div className=\"wrapper_container\">\n        <div className=\"sitebar\">\n          <Route path={getHome()} component={Home} />\n          <Route path={getLogin()} component={FormAutorization} />\n          <Route path={getSignup()} component={FormRegistration} />\n        </div>\n        <Route path={getBlogging()} component={Articles} />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isAuth: getIsAuth(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  getUser: actions.getUser,\n  setLoginSuccess: actions.setLoginSuccess,\n};\n\nApp.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  getUser: PropTypes.func.isRequired,\n  setLoginSuccess: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(App);\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport redusers from './redux/redusers';\nimport '@csstools/normalize.css';\nimport 'antd/dist/antd.css';\nimport App from './components/App';\n\nconst store = createStore(redusers, compose(applyMiddleware(thunk)));\nconst Main = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route component={App} />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}