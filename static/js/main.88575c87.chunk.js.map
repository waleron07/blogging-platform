{"version":3,"sources":["api/index.js","helpers-localstorege/index.js","redux/actions.js","redux/redusers.js","redux/selectors.js","components/Header/Header.jsx","components/Header/index.js","heleper-vadalition/vadalition.js","components/Form-registration/Form-registration.jsx","components/Form-registration/index.js","components/Form-autorisation/Form-autorisation.jsx","components/Form-autorisation/index.js","components/Houme/Houme.jsx","components/Houme/index.js","components/App/App.jsx","components/App/index.js","index.jsx"],"names":["baseUrl","serverRegistrations","regData","url","axios","post","serverAutorizations","autData","dataAutorization","header","get","getHeader","token","localStorage","getItem","headers","Authorization","clearLocalstoge","clear","getAurorisation","setLoginSuccess","createAction","setLoginRequest","setLoginFailure","loginData","setSignUpSuccess","setSignUpRequest","getAutorizations","history","dispatch","a","response","data","push","setAutorizations","values","setFieldError","email","password","user","setItem","errors","handleActions","actions","state","payload","isLogin","isSignUp","combineReducers","getLogin","getSignUp","getLoginData","actionCreators","Header","connect","handleClickExit","mappincButton","bloggingplatformlogin","bloggingplatformsignup","bloggingplatformhoume","mappincLinc","bloggingplatform","className","onClick","to","newPathname","location","pathname","replace","returnNotAutorization","validationSchemaRegistration","Yup","shape","username","max","min","required","matches","validationSchemaAutorisation","useStyles","makeStyles","theme","wrapper__registration","display","justifyContent","flexDirection","alignItems","padding","spacing","title","textTransform","textAlign","margin","marginTop","fontSize","registration","alignContent","width","registration__data","marginBottom","setRegistrations","status","usernameError","emailError","FormRegistration","classes","initialValues","validationSchema","onSubmit","touched","handleSubmit","handleBlur","handleChange","size","name","as","component","TextField","label","variant","onChange","error","Boolean","helperText","onBlur","value","type","autoComplete","fullWidth","htmlType","disabled","Object","keys","length","FormAutorization","Houme","App","useEffect","path","store","createStore","redusers","compose","applyMiddleware","thunk","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88575c87.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const baseUrl = 'https://conduit.productionready.io/api/';\n\nexport const serverRegistrations = (regData) => {\n  const url = `${baseUrl}users`;\n  const response = axios.post(url, regData);\n  return response;\n};\n\nexport const serverAutorizations = (autData) => {\n  const url = `${baseUrl}users/login`;\n  const response = axios.post(url, autData);\n  return response;\n};\n\nexport const dataAutorization = (header) => {\n  const url = `${baseUrl}user`;\n  const response = axios.get(url, header);\n  return response;\n};\n","export const getHeader = () => {\n  const token = localStorage.getItem('token');\n  let header = null;\n  if (token) {\n    header = {\n      headers: {\n        Authorization: `Token ${token}`,\n      },\n    };\n  }\n  return header;\n};\n\nexport const clearLocalstoge = () => {\n  localStorage.clear();\n};\n\nexport const getAurorisation = () => {\n  const header = getHeader();\n  return header === null ? 'noutAutorization' : 'autorization';\n};\n","/* eslint-disable no-unused-expressions */\n\nimport { createAction } from 'redux-actions';\nimport {\n  serverRegistrations,\n  serverAutorizations,\n  dataAutorization,\n} from '../api/index';\nimport { getHeader } from '../helpers-localstorege';\n\nexport const setLoginSuccess = createAction('STATUS_LOGIN_SUCCESS');\nexport const setLoginRequest = createAction('STATUS_LOGIN_REQUEST');\nexport const setLoginFailure = createAction('STATUS_LOGIN_FAILURE');\n\nexport const loginData = createAction('LOGIN_DATA');\n\nexport const setSignUpSuccess = createAction('STATUS_SIGNUP_SUCCESS');\nexport const setSignUpRequest = createAction('STATUS_SIGNUP_REQUEST');\nexport const setSignUpFailure = createAction('STATUS_SIGNUP_FAILURE');\n\nexport const getAutorizations = (history) => async (dispatch) => {\n  try {\n    const response = await dataAutorization(getHeader());\n    dispatch(setLoginSuccess());\n    dispatch(loginData(response.data));\n    history.push('/blogging-platform/houme');\n  } catch (error) {\n    history.push('/blogging-platform/signup');\n  }\n};\n\nexport const setAutorizations = (values, setFieldError, history) => async (\n  dispatch,\n) => {\n  const { email, password } = values;\n  const autData = {\n    user: {\n      email,\n      password,\n    },\n  };\n\n  dispatch(setSignUpRequest());\n  try {\n    const response = await serverAutorizations(autData);\n    const { token } = response.data.user;\n    localStorage.setItem('token', `${token}`);\n    dispatch(getAutorizations(history));\n  } catch (error) {\n    error.response.data.errors\n      && setFieldError('password', 'Почта или пароль неверны');\n    error.response.data.errors\n      && setFieldError('email', 'Почта или пароль неверны');\n  }\n};\n\nexport const setRegistrations = (values, setFieldError, history) => async (\n  dispatch,\n) => {\n  const { username, email, password } = values;\n  const regData = {\n    user: {\n      username,\n      email,\n      password,\n    },\n  };\n\n  dispatch(setLoginRequest());\n  try {\n    const response = await serverRegistrations(regData);\n    if (response.status === 200) {\n      dispatch(setLoginSuccess(true));\n      dispatch(setAutorizations(values, setFieldError, history));\n    }\n  } catch (error) {\n    const {\n      username: usernameError,\n      email: emailError,\n    } = error.response.data.errors;\n    usernameError\n      && setFieldError(\n        'username',\n        'Пользователь с таким именем уже зарегистрирован',\n      );\n    emailError\n      && setFieldError('email', 'Пользователь с такой почтой уже зарегистрирован');\n  }\n};\n","import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from './actions';\n\nconst loginData = handleActions(\n  {\n    [actions.loginData](state, { payload: login }) {\n      return login.user;\n    },\n  },\n  {},\n);\n\nconst isLogin = handleActions(\n  {\n    [actions.setLoginSuccess]() {\n      return true;\n    },\n    [actions.setLoginFailure]() {\n      return false;\n    },\n  },\n  false,\n);\n\nconst isSignUp = handleActions(\n  {\n    [actions.setSignUpSuccess](state, { payload: status }) {\n      return status;\n    },\n  },\n  false,\n);\n\nexport default combineReducers({\n  isSignUp,\n  isLogin,\n  loginData,\n});\n","export const getLogin = (state) => state.isLogin;\nexport const getSignUp = (state) => state.isSignUp;\nexport const getLoginData = (state) => state.loginData;\n","import React from 'react';\nimport './Header.css';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { getLogin } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\nimport { clearLocalstoge, getAurorisation } from '../../helpers-localstorege';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isLogin: getLogin(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  setLoginFailure: actions.setLoginFailure,\n};\n\nconst Header = ({ setLoginFailure, history }) => {\n  const handleClickExit = () => {\n    setLoginFailure();\n    clearLocalstoge();\n  };\n\n  const mappincButton = {\n    bloggingplatformlogin: 'Регистрация',\n    bloggingplatformsignup: 'Вход',\n    bloggingplatformhoume: 'Регистрация',\n  };\n  const mappincLinc = {\n    bloggingplatformlogin: '/blogging-platform/signup',\n    bloggingplatformsignup: '/blogging-platform/login',\n    bloggingplatformhoume: '/blogging-platform/login',\n    bloggingplatform: '/blogging-platform/login',\n  };\n\n  const returnAutorization = () => (\n    <>\n      <Button className=\"header__btn\" onClick={handleClickExit}>\n        <NavLink to=\"/blogging-platform/signup\">Выход</NavLink>\n      </Button>\n    </>\n  );\n\n  const returnNotAutorization = () => {\n    const { pathname } = history.location;\n    const newPathname = pathname.replace(/[/,-]/g, '');\n\n    return (\n      <>\n        <Button className=\"header__btn\">\n          <NavLink to={mappincLinc[newPathname]}>\n            {mappincButton[newPathname]}\n          </NavLink>\n        </Button>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"header\">\n      {getAurorisation === 'autorization'\n        ? returnAutorization()\n        : returnNotAutorization()}\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  setLoginFailure: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(Header);\n","import Header from './Header';\n\nexport default Header;\n","import * as Yup from 'yup';\n\nexport const validationSchemaRegistration = Yup.object().shape({\n  username: Yup.string()\n    .max(50, 'Что-то слишком длинное имя')\n    .min(2, 'Слишком короткое имя')\n    .required('Обязательное поле'),\n  password: Yup.string()\n    .min(8, 'Не менее 8 символов')\n    .max(40, 'Ну может покороче пароль придумаете?')\n    .required('Обязательное поле')\n    .matches(\n      /(?=.*[0-9])(?=.*[A-Z])[a-z0-9A-Z]/,\n      'буквы латинского алфавита и цифры, от 8 до 40 символов, как минимум одна цифра и одна заглавная буква',\n    ),\n  email: Yup.string()\n    .email('Вводи правильно, адрес не коректен')\n    .required('Обязательное поле'),\n});\n\nexport const validationSchemaAutorisation = Yup.object().shape({\n  email: Yup.string()\n    .email('Вводи правильно, адрес не коректен')\n    .required('Обязательное поле'),\n  password: Yup.string()\n    .min(8, 'Не менее 8 символов')\n    .max(40, 'Ну может покороче пароль придумаете?')\n    .required('Обязательное поле')\n    .matches(\n      /(?=.*[0-9])(?=.*[A-Z])[a-z0-9A-Z]/,\n      'буквы латинского алфавита и цифры, от 8 до 40 символов, как минимум одна цифра и одна заглавная буква',\n    ),\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getLogin, getSignUp } from '../../redux/selectors';\nimport { validationSchemaRegistration } from '../../heleper-vadalition/vadalition';\nimport * as actions from '../../redux/actions';\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper__registration: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n\n  title: {\n    textTransform: 'uppercase',\n    textAlign: 'center',\n    margin: 0,\n    marginTop: theme.spacing(1),\n    '@media(maxWidth: 1200px)': {\n      fontSize: 18,\n    },\n  },\n\n  registration: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignContent: 'center',\n    padding: theme.spacing(2),\n    width: 350,\n  },\n\n  registration__data: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst actionCreators = {\n  setRegistrations: actions.setRegistrations,\n};\n\nconst FormRegistration = ({ setRegistrations, history }) => {\n  const classes = useStyles();\n  const initialValues = {\n    username: '',\n    email: '',\n    password: '',\n  };\n\n  return (\n    <div className={classes.wrapper__registration}>\n      <h1 className={classes.title}>регистрация</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchemaRegistration}\n        onSubmit={(values, { setFieldError }) => {\n          setRegistrations(values, setFieldError, history);\n        }}\n      >\n        {({\n          touched,\n          errors,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          values,\n        }) => (\n          <Form className={classes.registration} onSubmit={handleSubmit}>\n            <Field\n              size=\"small\"\n              name=\"username\"\n              className={classes.registration__data}\n              as=\"input\"\n              component={TextField}\n              label=\"Имя\"\n              variant=\"outlined\"\n              onChange={handleChange('username')}\n              error={touched.username && Boolean(errors.username)}\n              helperText={touched.username && errors.username}\n              onBlur={handleBlur('username')}\n              required\n              value={values.username}\n            />\n            <Field\n              size=\"small\"\n              name=\"email\"\n              className={classes.registration__data}\n              as=\"input\"\n              component={TextField}\n              label=\"Электронная почта\"\n              variant=\"outlined\"\n              onChange={handleChange('email')}\n              error={touched.email && Boolean(errors.email)}\n              helperText={touched.email && errors.email}\n              onBlur={handleBlur('email')}\n              required\n              value={values.email}\n            />\n            <Field\n              size=\"small\"\n              name=\"password\"\n              className={classes.registration__data}\n              component={TextField}\n              label=\"Пароль\"\n              variant=\"outlined\"\n              onChange={handleChange('password')}\n              type=\"password\"\n              error={touched.password && Boolean(errors.password)}\n              helperText={touched.password && errors.password}\n              onBlur={handleBlur('password')}\n              autoComplete=\"current-password\"\n              fullWidth\n              required\n              value={values.password}\n            />\n            <Button\n              htmlType=\"submit\"\n              type=\"primary\"\n              disabled={Object.keys(errors).length > 0 ? 'disabled' : null}\n            >\n              Зарегистрироваться\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <NavLink to=\"/blogging-platform/login\">Войти</NavLink>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isLogin: getLogin(state),\n    isSignUp: getSignUp(state),\n  };\n  return props;\n};\n\nFormRegistration.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  setRegistrations: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(FormRegistration);\n","import FormRegistration from './Form-registration';\n\nexport default FormRegistration;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { validationSchemaAutorisation } from '../../heleper-vadalition/vadalition';\nimport { getLogin, getSignUp } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper__registration: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n\n  title: {\n    textTransform: 'uppercase',\n    textAlign: 'center',\n    margin: 0,\n    marginTop: theme.spacing(1),\n    '@media(maxWidth: 1200px)': {\n      fontSize: 18,\n    },\n  },\n\n  registration: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignContent: 'center',\n    padding: theme.spacing(2),\n    width: 350,\n  },\n\n  registration__data: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst actionCreators = {\n  setAutorizations: actions.setAutorizations,\n};\n\nconst FormAutorization = ({ setAutorizations, history }) => {\n  const classes = useStyles();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  return (\n    <div className={classes.wrapper__registration}>\n      <h1 className={classes.title}>Авторизация</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchemaAutorisation}\n        onSubmit={(values, { setFieldError }) => {\n          setAutorizations(values, setFieldError, history);\n        }}\n      >\n        {({\n          touched,\n          errors,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          values,\n        }) => (\n          <Form className={classes.registration} onSubmit={handleSubmit}>\n            <Field\n              size=\"small\"\n              name=\"email\"\n              className={classes.registration__data}\n              as=\"input\"\n              component={TextField}\n              label=\"Электронная почта\"\n              variant=\"outlined\"\n              onChange={handleChange('email')}\n              error={touched.email && Boolean(errors.email)}\n              helperText={touched.email && errors.email}\n              onBlur={handleBlur('email')}\n              required\n              value={values.email}\n            />\n            <Field\n              size=\"small\"\n              name=\"password\"\n              className={classes.registration__data}\n              component={TextField}\n              label=\"Пароль\"\n              variant=\"outlined\"\n              onChange={handleChange('password')}\n              type=\"password\"\n              error={touched.password && Boolean(errors.password)}\n              helperText={touched.password && errors.password}\n              onBlur={handleBlur('password')}\n              autoComplete=\"current-password\"\n              fullWidth\n              required\n              value={values.password}\n            />\n            <Button\n              htmlType=\"submit\"\n              type=\"primary\"\n              disabled={Object.keys(errors).length > 0 ? 'disabled' : null}\n            >\n              Вход\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <NavLink to=\"/blogging-platform/signup\">Зарегистрироваться</NavLink>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isLogin: getLogin(state),\n    isSignUp: getSignUp(state),\n  };\n  return props;\n};\n\nFormAutorization.propTypes = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  isLogin: PropTypes.bool.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  setAutorizations: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(FormAutorization);\n","import FormAutorization from './Form-autorisation';\n\nexport default FormAutorization;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { getLoginData } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\nimport './Houme.css';\nimport { clearLocalstoge } from '../../helpers-localstorege';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    loginData: getLoginData(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  setLoginFailure: actions.setLoginFailure,\n};\n\nconst Houme = ({ loginData: { username }, setLoginFailure }) => {\n  const handleClick = () => {\n    setLoginFailure();\n    clearLocalstoge();\n  };\n\n  return (\n    <div className=\"wrapper__houme\">\n      <h1 className=\"title\">Личный кабинет</h1>\n      <span className=\"name\">{username}</span>\n      <Button className=\"houme__btn\" onClick={handleClick}>\n        <NavLink to=\"/blogging-platform/login\">Выход</NavLink>\n      </Button>\n    </div>\n  );\n};\n\nHoume.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  loginData: PropTypes.object.isRequired,\n  setLoginFailure: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(Houme);\n","import Houme from './Houme';\n\nexport default Houme;\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\nimport Header from '../Header';\nimport { getLogin, getSignUp, getLoginData } from '../../redux/selectors';\nimport FormRegistration from '../Form-registration';\nimport FormAutorization from '../Form-autorisation';\nimport Houme from '../Houme';\nimport * as actions from '../../redux/actions';\n\nconst App = ({\n  isLogin, history, getAutorizations, setLoginSuccess,\n}) => {\n  const updatePath = () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      getAutorizations(history);\n      setLoginSuccess();\n    } else {\n      history.push('/blogging-platform/signup');\n    }\n  };\n\n  useEffect(() => {\n    updatePath();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLogin]);\n\n  return (\n    <>\n      <div className=\"container\">\n        <Route path=\"/blogging-platform\" component={Header} />\n        <div className=\"sitebar\">\n          <Route path=\"/blogging-platform/houme\" component={Houme} />\n          <Route path=\"/blogging-platform/login\" component={FormAutorization} />\n          <Route\n            path=\"/blogging-platform/signup\"\n            component={FormRegistration}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isLogin: getLogin(state),\n    isSignUp: getSignUp(state),\n    loginData: getLoginData(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  getAutorizations: actions.getAutorizations,\n  setLoginSuccess: actions.setLoginSuccess,\n};\n\nApp.propTypes = {\n  isLogin: PropTypes.bool.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  getAutorizations: PropTypes.func.isRequired,\n  setLoginSuccess: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(App);\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport redusers from './redux/redusers';\nimport '@csstools/normalize.css';\nimport 'antd/dist/antd.css';\nimport App from './components/App';\n\nconst store = createStore(redusers, compose(applyMiddleware(thunk)));\n\nconst Main = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route component={App} />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}