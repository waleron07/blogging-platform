{"version":3,"sources":["utils/localStorage.js","api/index.js","utils/route.js","redux/actions.js","redux/redusers.js","redux/selectors.js","components/Header/Header.jsx","components/Header/index.js","components/forms/form-registration/vadalition.js","components/forms/styled.js","components/forms/form-registration/Form-registration.jsx","components/forms/form-registration/index.js","components/forms/form-autorisation/vadalition.js","components/forms/form-autorisation/Form-autorisation.jsx","components/forms/form-autorisation/index.js","components/forms/form-add-article/validation.js","components/forms/form-add-article/FormAddArticle.jsx","components/forms/form-add-article/index.js","utils/formatDate.js","components/articles/Article/index.js","components/articles/Article/Article.jsx","components/articles/articles-list/ArticlesList.jsx","components/articles/articles-list/index.js","components/articles/view-article/ViewArticle.jsx","components/articles/view-article/index.js","components/Home/Home.jsx","components/Home/index.js","components/App/App.jsx","components/App/index.js","index.jsx"],"names":["getToken","localStorage","getItem","clearLocalstoge","clear","setToken","token","setItem","baseUrl","instance","axios","create","interceptors","request","use","config","userConfig","headers","Authorization","userRequest","url","get","loginRequest","values","regData","user","username","email","password","post","signupRequest","autData","articlesRequest","articleRequest","slug","addArticlesRequest","userArticlesRequest","getSlug","setSignUpRequest","createAction","setSignUpSuccess","setSignUpFailure","setLoginRequest","setLoginSuccess","setLoginFailure","setUserRequest","setUserSuccess","setUserFailure","setCreateArticleRequest","setCreateArticleSuccess","setCreateArticleFailure","loginData","setLoginExit","articlesData","articleData","getUser","history","dispatch","a","response","data","push","getArticles","getArticle","handleActions","actions","state","payload","isAuth","isBlockingForm","articlesList","articleOne","combineReducers","getIsAuth","getUsername","getBlockingForm","getArticlesList","getArticleOne","actionCreators","Header","connect","handleClickExit","className","path","component","onClick","to","validationSchema","Yup","shape","max","min","required","matches","useStyles","makeStyles","theme","form__container","display","justifyContent","flexDirection","alignItems","padding","spacing","form__container__addArticle","width","form__title","textTransform","textAlign","margin","marginTop","fontSize","form__user","alignContent","form__user__data","marginBottom","form__user__body","rows","form__block__tags","form__user__tags","borderRadius","form__user__btn__tags","error__internet","color","form__user__btn","backgroundColor","borderColor","registration","status","FormRegistration","classes","handleSubmitRegistration","setFieldError","undefined","isAxiosError","errors","initialValues","onSubmit","touched","handleSubmit","handleBlur","handleChange","dirty","isValid","size","name","as","TextField","label","variant","onChange","error","Boolean","helperText","onBlur","value","disabled","type","autoComplete","fullWidth","htmlType","errorName","authorization","FormAutorization","handleSubmitAutorization","title","description","body","createArticles","FormAddArticle","useState","statusCreateAticle","setStatusCreateAticle","ret","tagList","normalizeData","arrTag","filter","tags","reduce","acc","Array","from","Set","handleSubmitForm","console","log","arrTagList","articles","article","TextareaAutosize","placeholder","render","arrayHelpers","map","index","key","id","remove","uniqueId","formatDate","date","formatDistanceToNow","Date","locale","ru","Article","author","alt","src","image","item","createdAt","updatedAt","ArticlesList","useHistory","hanleClckArticle","event","onKeyDown","tabIndex","role","Pagination","ViewArticle","tag","favorited","Tooltip","Favorite","favoritesCount","FavoriteBorder","userArticles","Houme","App","useEffect","Home","exact","store","createStore","redusers","compose","applyMiddleware","thunk","Main","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3290c890.chunk.js","sourcesContent":["export const getToken = () => {\n  const token = localStorage.getItem('token');\n  return token;\n};\n\nexport const clearLocalstoge = () => {\n  localStorage.clear();\n};\n\nexport const setToken = (token) => {\n  localStorage.setItem('token', `${token}`);\n};\n","import axios from 'axios';\nimport { getToken } from '../utils/localStorage';\n\nexport const baseUrl = 'https://conduit.productionready.io/api/';\n\nexport const instance = axios.create();\n\ninstance.interceptors.request.use((config) => {\n  const token = getToken();\n  if (token) {\n    const userConfig = config;\n    userConfig.headers.Authorization = `Token ${getToken()}`;\n    return userConfig;\n  }\n  return config;\n});\n\nexport const userRequest = () => {\n  const url = `${baseUrl}user`;\n  const response = instance.get(url);\n  return response;\n};\n\nexport const loginRequest = (values) => {\n  const { username, email, password } = values;\n  const regData = {\n    user: {\n      username,\n      email,\n      password,\n    },\n  };\n\n  const url = `${baseUrl}users`;\n  const response = axios.post(url, regData);\n  return response;\n};\n\nexport const signupRequest = (values) => {\n  const { email, password } = values;\n  const autData = {\n    user: {\n      email,\n      password,\n    },\n  };\n  const url = `${baseUrl}users/login`;\n  const response = axios.post(url, autData);\n  return response;\n};\n\nexport const articlesRequest = () => {\n  const url = `${baseUrl}articles?limit=5`;\n  const response = instance.get(url);\n  return response;\n};\n\nexport const articleRequest = (slug) => {\n  const url = `${baseUrl}articles/${slug}`;\n  const response = instance.get(url);\n  return response;\n};\n\nexport const addArticlesRequest = (values) => {\n  const url = `${baseUrl}articles`;\n  const response = instance.post(url, values);\n  return response;\n};\n\nexport const userArticlesRequest = (values) => {\n  const url = `${baseUrl}articles?author=${values}`;\n  const response = instance.get(url);\n  return response;\n};\n\nexport const favoriteArticleRequest = (slug) => {\n  const url = `${baseUrl}articles/${slug}/favorite`;\n  const response = instance.post(url);\n  return response;\n};\n\nexport const unfavoriteArticleRequest = (slug) => {\n  const url = `${baseUrl}articles/${slug}/favorite`;\n  const response = instance.delete(url);\n  return response;\n};\n","export const getBlogging = () => '/blogging-platform';\n\nexport const getLogin = () => '/blogging-platform/login';\n\nexport const getSignup = () => '/blogging-platform/signup';\n\nexport const getAdd = () => '/blogging-platform/add';\n\nexport const getHome = () => '/blogging-platform/home';\n\nexport const getSlug = (slug) => `/blogging-platform/articles/:${slug}`;\n","import { createAction } from 'redux-actions';\nimport {\n  loginRequest,\n  signupRequest,\n  userRequest,\n  articlesRequest,\n  addArticlesRequest,\n  userArticlesRequest,\n  articleRequest,\n} from '../api/index';\nimport { setToken } from '../utils/localStorage';\nimport { getBlogging, getSignup, getSlug } from '../utils/route';\n\nexport const setSignUpRequest = createAction('STATUS_SIGNUP_REQUEST');\nexport const setSignUpSuccess = createAction('STATUS_SIGNUP_SUCCESS');\nexport const setSignUpFailure = createAction('STATUS_SIGNUP_FAILURE');\n\nexport const setLoginRequest = createAction('STATUS_LOGIN_REQUEST');\nexport const setLoginSuccess = createAction('STATUS_LOGIN_SUCCESS');\nexport const setLoginFailure = createAction('STATUS_LOGIN_FAILURE');\n\nexport const setUserRequest = createAction('STATUS_USER_REQUEST');\nexport const setUserSuccess = createAction('STATUS_USER_SUCCESS');\nexport const setUserFailure = createAction('STATUS_USER_FAILURE');\n\nexport const setCreateArticleRequest = createAction(\n  'STATUS_CREATE_ARTICLE_REQUEST',\n);\nexport const setCreateArticleSuccess = createAction(\n  'STATUS_CREATE_ARTICLE_SUCCESS',\n);\nexport const setCreateArticleFailure = createAction(\n  'STATUS_CREATE_ARTICLE_FAILURE',\n);\n\nexport const loginData = createAction('LOGIN_DATA');\nexport const setLoginExit = createAction('LOGIN_EXIT');\nexport const getRequest = createAction('REQUEST_DATA');\nexport const articlesData = createAction('ARTICLES_DATA');\nexport const articleData = createAction('ARTICLE_DATA');\n\nexport const getUser = (history) => async (dispatch) => {\n  dispatch(setUserRequest());\n  try {\n    const response = await userRequest();\n    dispatch(setUserSuccess());\n    dispatch(loginData(response.data));\n    history.push(getBlogging());\n  } catch (error) {\n    dispatch(setUserFailure());\n    history.push(getSignup());\n  }\n};\n\nexport const authorization = (values) => async (dispatch) => {\n  dispatch(setSignUpRequest());\n  try {\n    const response = await signupRequest(values);\n    const { token } = response.data.user;\n    setToken(token);\n    dispatch(setSignUpSuccess());\n  } catch (error) {\n    dispatch(setSignUpFailure());\n    throw error;\n  }\n};\n\nexport const registration = (values) => async (dispatch) => {\n  dispatch(setLoginRequest());\n  try {\n    const response = await loginRequest(values);\n    if (response.status === 200) {\n      const { token } = response.data.user;\n      localStorage.setItem('token', `${token}`);\n      dispatch(setLoginSuccess());\n    }\n  } catch (error) {\n    dispatch(setLoginFailure());\n    throw error;\n  }\n};\n\nexport const getArticles = () => async (dispatch) => {\n  try {\n    const response = await articlesRequest();\n    dispatch(articlesData(response.data));\n  } catch (error) {\n    dispatch(setLoginFailure());\n    throw error;\n  }\n};\n\nexport const getArticle = (history, slug) => async (dispatch) => {\n  try {\n    const response = await articleRequest(slug);\n    dispatch(articleData(response.data));\n    history.push(getSlug(slug));\n  } catch (error) {\n    dispatch(setLoginFailure());\n    throw error;\n  }\n};\n\nexport const createArticles = (values) => async (dispatch) => {\n  dispatch(setCreateArticleRequest());\n  try {\n    await addArticlesRequest(values);\n    dispatch(setCreateArticleSuccess());\n  } catch (error) {\n    dispatch(setCreateArticleFailure());\n    throw error;\n  }\n};\n\nexport const userArticles = (values) => async (dispatch) => {\n  try {\n    const response = await userArticlesRequest(values);\n    dispatch(articlesData(response.data));\n  } catch (error) {\n    dispatch(setLoginFailure());\n    throw error;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport * as actions from './actions';\n\nconst username = handleActions(\n  {\n    [actions.loginData](state, { payload: login }) {\n      return login.user.username;\n    },\n  },\n  '',\n);\n\nconst isAuth = handleActions(\n  {\n    [actions.setLoginSuccess]() {\n      return true;\n    },\n    [actions.setSignUpSuccess]() {\n      return true;\n    },\n    [actions.setUserSuccess]() {\n      return true;\n    },\n    [actions.setLoginFailure]() {\n      return false;\n    },\n    [actions.setSignUpFailure]() {\n      return false;\n    },\n    [actions.setUserFailure]() {\n      return false;\n    },\n    [actions.setLoginExit]() {\n      return false;\n    },\n  },\n  false,\n);\n\nconst isBlockingForm = handleActions(\n  {\n    [actions.setLoginRequest]() {\n      return true;\n    },\n    [actions.setCreateArticleRequest]() {\n      return true;\n    },\n    [actions.setSignUpRequest]() {\n      return true;\n    },\n    [actions.setUserSuccess]() {\n      return false;\n    },\n    [actions.setCreateArticleSuccess]() {\n      return false;\n    },\n    [actions.setLoginFailure]() {\n      return false;\n    },\n    [actions.setCreateArticleFailure]() {\n      return false;\n    },\n    [actions.setSignUpFailure]() {\n      return false;\n    },\n    [actions.setUserFailure]() {\n      return false;\n    },\n  },\n  false,\n);\n\nconst articlesList = handleActions(\n  {\n    [actions.articlesData](state, { payload: articles }) {\n      return articles;\n    },\n  },\n  [],\n);\n\nconst articleOne = handleActions(\n  {\n    [actions.articleData](state, { payload: article }) {\n      return article;\n    },\n  },\n  [],\n);\n\nexport default combineReducers({\n  articlesList,\n  articleOne,\n  isAuth,\n  username,\n  isBlockingForm,\n});\n","export const getIsAuth = (state) => state.isAuth;\nexport const getUsername = (state) => state.username;\nexport const getBlockingForm = (state) => state.isBlockingForm;\nexport const getIsINternetError = (state) => state.isInternetError;\nexport const getArticlesList = (state) => state.articlesList;\nexport const getArticleOne = (state) => state.articleOne;\n","import React from 'react';\nimport './Header.css';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport { getIsAuth } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\nimport { clearLocalstoge } from '../../utils/localStorage';\nimport { getBlogging, getLogin, getSignup } from '../../utils/route';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isAuth: getIsAuth(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  setLoginExit: actions.setLoginExit,\n};\n\nconst Header = ({ setLoginExit }) => {\n  const handleClickExit = () => {\n    setLoginExit();\n    clearLocalstoge();\n  };\n\n  const Login = () => (\n    <Button className=\"header__btn\" onClick={handleClickExit}>\n      <NavLink to={getLogin()}>Войти</NavLink>\n    </Button>\n  );\n  const Signup = () => (\n    <Button className=\"header__btn\" onClick={handleClickExit}>\n      <NavLink to={getSignup()}>Регистрация</NavLink>\n    </Button>\n  );\n\n  const Exit = () => (\n    <>\n      <Button className=\"header__btn\" onClick={handleClickExit}>\n        <NavLink to={getSignup()}>Выход</NavLink>\n      </Button>\n      <Button className=\"header__btn\">\n        <NavLink to={getBlogging()}>Личный кабинет</NavLink>\n      </Button>\n    </>\n  );\n\n  return (\n    <div className=\"header\">\n      <Switch>\n        <Route path={getSignup()} component={Login} />\n        <Route path={getLogin()} component={Signup} />\n        <Route path={getBlogging()} component={Exit} />\n      </Switch>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  setLoginExit: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(Header);\n","import Header from './Header';\n\nexport default Header;\n","import * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .max(50, 'Что-то слишком длинное имя')\n    .min(2, 'Слишком короткое имя')\n    .required('Обязательное поле'),\n  password: Yup.string()\n    .min(8, 'Не менее 8 символов')\n    .max(40, 'Ну может покороче пароль придумаете?')\n    .required('Обязательное поле')\n    .matches(\n      /(?=.*[0-9])(?=.*[A-Z])[a-z0-9A-Z]/,\n      'буквы латинского алфавита и цифры, от 8 до 40 символов, как минимум одна цифра и одна заглавная буква',\n    ),\n  email: Yup.string()\n    .email('Вводи правильно, адрес не коректен')\n    .required('Обязательное поле'),\n});\n\nexport default validationSchema;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  form__container: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n\n  form__container__addArticle: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n\n  form__title: {\n    textTransform: 'uppercase',\n    textAlign: 'center',\n    margin: 0,\n    marginTop: theme.spacing(1),\n    '@media(maxWidth: 1200px)': {\n      fontSize: 18,\n    },\n  },\n\n  form__user: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignContent: 'center',\n    padding: theme.spacing(2),\n  },\n\n  form__user__data: {\n    marginBottom: theme.spacing(2),\n  },\n\n  form__user__body: {\n    marginBottom: theme.spacing(2),\n    rows: '10',\n  },\n\n  form__block__tags: {\n    display: 'flex',\n  },\n\n  form__user__tags: {\n    margin: '5px 0',\n    padding: '5px',\n    borderRadius: '5px',\n  },\n\n  form__user__btn__tags: {\n    margin: '5px 0 0 5px',\n  },\n\n  error__internet: {\n    textAlign: 'center',\n    color: 'red',\n  },\n\n  form__user__btn: {\n    borderRadius: '5px',\n    backgroundColor: '#1890ff',\n    borderColor: '#1890ff',\n    color: '#ffffff',\n    margin: '5px 0',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { getBlockingForm } from '../../../redux/selectors';\nimport validationSchema from './vadalition';\nimport * as actions from '../../../redux/actions';\nimport useStyles from '../styled';\nimport { getLogin } from '../../../utils/route';\n\nconst actionCreators = {\n  registration: actions.registration,\n};\n\nconst FormRegistration = ({ registration, isBlockingForm }) => {\n  const classes = useStyles();\n  const initialValues = {\n    username: '',\n    email: '',\n    password: '',\n  };\n\n  const handleSubmitRegistration = async (values, { setFieldError }) => {\n    try {\n      await registration(values, setFieldError);\n    } catch (error) {\n      if (error.response === undefined && error.isAxiosError) {\n        setFieldError('errorName', 'Нет подключения к интернету');\n      }\n      if (error.response.data.errors.username) {\n        setFieldError(\n          'username',\n          'Пользователь с таким именем уже зарегистрирован',\n        );\n      }\n      if (error.response.data.errors.email) {\n        setFieldError(\n          'email',\n          'Пользователь с такой почтой уже зарегистрирован',\n        );\n      }\n    }\n  };\n\n  return (\n    <div className={classes.form__container}>\n      <h1 className={classes.form__title}>регистрация</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmitRegistration}\n      >\n        {({\n          touched,\n          errors,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          values,\n          dirty,\n          isValid,\n        }) => (\n          <Form className={classes.form__user} onSubmit={handleSubmit}>\n            <Field\n              size=\"small\"\n              name=\"username\"\n              className={classes.form__user__data}\n              as=\"input\"\n              component={TextField}\n              label=\"Имя\"\n              variant=\"outlined\"\n              onChange={handleChange('username')}\n              error={touched.username && Boolean(errors.username)}\n              helperText={touched.username && errors.username}\n              onBlur={handleBlur('username')}\n              required\n              value={values.username}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"email\"\n              className={classes.form__user__data}\n              as=\"input\"\n              component={TextField}\n              label=\"Электронная почта\"\n              variant=\"outlined\"\n              onChange={handleChange('email')}\n              error={touched.email && Boolean(errors.email)}\n              helperText={touched.email && errors.email}\n              onBlur={handleBlur('email')}\n              required\n              value={values.email}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"password\"\n              className={classes.form__user__data}\n              component={TextField}\n              label=\"Пароль\"\n              variant=\"outlined\"\n              onChange={handleChange('password')}\n              type=\"password\"\n              error={touched.password && Boolean(errors.password)}\n              helperText={touched.password && errors.password}\n              onBlur={handleBlur('password')}\n              autoComplete=\"current-password\"\n              fullWidth\n              required\n              value={values.password}\n              disabled={isBlockingForm}\n            />\n            <Button\n              htmlType=\"submit\"\n              type=\"primary\"\n              disabled={!isValid || !dirty || isBlockingForm}\n            >\n              Зарегистрироваться\n            </Button>\n            {errors.errorName && (\n              <span className={classes.error__internet}>\n                {errors.errorName}\n              </span>\n            )}\n          </Form>\n        )}\n      </Formik>\n      <NavLink to={getLogin()}>Войти</NavLink>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isBlockingForm: getBlockingForm(state),\n  };\n  return props;\n};\n\nFormRegistration.propTypes = {\n  registration: PropTypes.func.isRequired,\n  isBlockingForm: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(FormRegistration);\n","import FormRegistration from './Form-registration';\n\nexport default FormRegistration;\n","import * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string().required('Обязательное поле'),\n  email: Yup.string()\n    .email('Вводи правильно, адрес не коректен')\n    .required('Обязательное поле'),\n});\n\nexport default validationSchema;\n","/* eslint-disable react/no-unused-prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport useStyles from '../styled';\nimport { getBlockingForm } from '../../../redux/selectors';\nimport validationSchema from './vadalition';\nimport * as actions from '../../../redux/actions';\nimport { getSignup } from '../../../utils/route';\n\nconst actionCreators = {\n  authorization: actions.authorization,\n};\n\nconst FormAutorization = ({ authorization, isBlockingForm }) => {\n  const classes = useStyles();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmitAutorization = async (values, setFieldError) => {\n    try {\n      await authorization(values, setFieldError);\n    } catch (error) {\n      if (error.response === undefined && error.isAxiosError) {\n        setFieldError('errorName', 'Нет подключения к интернету');\n      } else {\n        setFieldError('password', 'Почта или пароль неверны');\n        setFieldError('email', 'Почта или пароль неверны');\n      }\n    }\n  };\n\n  return (\n    <div className={classes.form__container}>\n      <h1 className={classes.form__title}>Авторизация</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setFieldError }) => {\n          handleSubmitAutorization(values, setFieldError);\n        }}\n      >\n        {({\n          touched,\n          errors,\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          values,\n          isValid,\n          dirty,\n        }) => (\n          <Form className={classes.form__user} onSubmit={handleSubmit}>\n            <Field\n              size=\"small\"\n              name=\"email\"\n              className={classes.form__user__data}\n              as=\"input\"\n              component={TextField}\n              label=\"Электронная почта\"\n              variant=\"outlined\"\n              onChange={handleChange('email')}\n              error={touched.email && Boolean(errors.email)}\n              helperText={touched.email && errors.email}\n              onBlur={handleBlur('email')}\n              required\n              value={values.email}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"password\"\n              className={classes.form__user__data}\n              component={TextField}\n              label=\"Пароль\"\n              variant=\"outlined\"\n              onChange={handleChange('password')}\n              type=\"password\"\n              error={touched.password && Boolean(errors.password)}\n              helperText={touched.password && errors.password}\n              onBlur={handleBlur('password')}\n              autoComplete=\"current-password\"\n              fullWidth\n              required\n              value={values.password}\n              disabled={isBlockingForm}\n            />\n            <Button\n              htmlType=\"submit\"\n              type=\"primary\"\n              disabled={!isValid || !dirty || isBlockingForm}\n            >\n              Вход\n            </Button>\n            {errors.errorName && (\n              <span className={classes.error__internet}>\n                {errors.errorName}\n              </span>\n            )}\n          </Form>\n        )}\n      </Formik>\n      <NavLink to={getSignup()}>Зарегистрироваться</NavLink>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isBlockingForm: getBlockingForm(state),\n  };\n  return props;\n};\n\nFormAutorization.propTypes = {\n  isBlockingForm: PropTypes.bool.isRequired,\n  authorization: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(FormAutorization);\n","import FormAutorization from './Form-autorisation';\n\nexport default FormAutorization;\n","import * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Обязательное поле'),\n  description: Yup.string().required('Обязательное поле'),\n  body: Yup.string().required('Обязательное поле'),\n});\n\nexport default validationSchema;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './FormAddArticle.css';\nimport {\n  Formik, Form, Field, FieldArray,\n} from 'formik';\nimport { Button, Input } from 'antd';\nimport { TextField, TextareaAutosize } from '@material-ui/core';\nimport { uniqueId } from 'lodash';\nimport validationSchema from './validation';\nimport useStyles from '../styled';\nimport { getBlockingForm } from '../../../redux/selectors';\nimport * as actions from '../../../redux/actions';\n\nconst FormAddArticle = ({ createArticles, isBlockingForm }) => {\n  const [statusCreateAticle, setStatusCreateAticle] = useState(null);\n\n  const classes = useStyles();\n  const initialValues = {\n    title: '',\n    description: '',\n    body: '',\n    ret: '',\n    tagList: [],\n  };\n\n  const normalizeData = ({ tagList }) => {\n    const newTagList = tagList.filter(({ tags }) => tags !== '');\n    const arrTag = newTagList.reduce((acc, { tags }) => [...acc, tags], []);\n    return Array.from(new Set(arrTag));\n  };\n\n  const handleSubmitForm = async (values, { setFieldError }) => {\n    console.log(values);\n    const { title, description, body } = values;\n    const arrTagList = normalizeData(values);\n    const articles = {\n      article: {\n        title,\n        description,\n        body,\n        tagList: arrTagList,\n      },\n    };\n\n    try {\n      await createArticles(articles);\n      setStatusCreateAticle(true);\n    } catch (error) {\n      if (error.response === undefined && error.isAxiosError) {\n        setFieldError('errorName', 'Нет подключения к интернету');\n      }\n    }\n  };\n\n  const returnForm = () => (\n    <div className={classes.form__container__addArticle}>\n      <h1 className={classes.form__title}>Новая статья</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmitForm}\n      >\n        {({\n          handleSubmit,\n          handleBlur,\n          handleChange,\n          values,\n          touched,\n          errors,\n          isValid,\n          dirty,\n        }) => (\n          <Form className={classes.form__user} onSubmit={handleSubmit}>\n            {touched.name && (\n              <span className=\"error__message\">{errors.name}</span>\n            )}\n            <Field\n              size=\"small\"\n              name=\"title\"\n              as=\"input\"\n              component={TextField}\n              className={classes.form__user__data}\n              label=\"Загаловок статьи\"\n              variant=\"outlined\"\n              onChange={handleChange('title')}\n              error={touched.title && Boolean(errors.title)}\n              helperText={touched.title && errors.title}\n              onBlur={handleBlur('title')}\n              required\n              value={values.title}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"description\"\n              as=\"input\"\n              component={TextField}\n              className={classes.form__user__data}\n              label=\"Краткое описание\"\n              variant=\"outlined\"\n              onChange={handleChange('description')}\n              error={touched.description && Boolean(errors.description)}\n              helperText={touched.description && errors.description}\n              onBlur={handleBlur('description')}\n              required\n              value={values.description}\n              disabled={isBlockingForm}\n            />\n            <Field\n              size=\"small\"\n              name=\"body\"\n              as=\"input\"\n              component={TextareaAutosize}\n              className={classes.form__user__body}\n              placeholder=\"Текст статьи\"\n              rows=\"10\"\n              variant=\"outlined\"\n              onChange={handleChange('body')}\n              onBlur={handleBlur('body')}\n              required\n              value={values.body}\n              disabled={isBlockingForm}\n            />\n            <span className={classes.error__internet}>\n              {touched.body ? errors.body : ''}\n            </span>\n            <FieldArray\n              name=\"tagList\"\n              render={(arrayHelpers) => (\n                <div>\n                  {values.tagList.map((tags, index) => (\n                    <div key={tags.id}>\n                      <div className={classes.form__block__tags}>\n                        <Input\n                          className={classes.form__user__tags}\n                          name={`tagList.[${index}].tags`}\n                          onChange={handleChange}\n                          disabled={isBlockingForm}\n                        />\n                        <Button\n                          className={classes.form__user__btn__tags}\n                          onClick={() => arrayHelpers.remove(index)}\n                          disabled={isBlockingForm}\n                        >\n                          х\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                  <Button\n                    className={classes.form__user__btn}\n                    disabled={isBlockingForm}\n                    onClick={() => {\n                      arrayHelpers.push({ id: uniqueId(), tags: '' });\n                    }}\n                  >\n                    Добавить тэг\n                  </Button>\n                </div>\n              )}\n            />\n            {errors.errorName && (\n              <span className={classes.error__internet}>\n                {errors.errorName}\n              </span>\n            )}\n            <Button\n              className={classes.form__user__data}\n              htmlType=\"submit\"\n              type=\"primary\"\n              disabled={!isValid || !dirty || isBlockingForm}\n            >\n              Отправить\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n\n  const returnStatusCreate = () => (\n    <div>\n      <span>Ваша статья успешно добавлена</span>\n    </div>\n  );\n\n  return statusCreateAticle ? returnStatusCreate() : returnForm();\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isBlockingForm: getBlockingForm(state),\n  };\n  return props;\n};\n\nFormAddArticle.propTypes = {\n  createArticles: PropTypes.func.isRequired,\n  isBlockingForm: PropTypes.bool.isRequired,\n};\n\nconst actionCreators = {\n  createArticles: actions.createArticles,\n};\n\nexport default connect(mapStateToProps, actionCreators)(FormAddArticle);\n","import FormAddArticle from './FormAddArticle';\n\nexport default FormAddArticle;\n","import { formatDistanceToNow } from 'date-fns';\nimport { ru } from 'date-fns/locale';\n\nconst formatDate = (date) => formatDistanceToNow(new Date(date), { locale: ru });\n\nexport default formatDate;\n","import Article from './Article';\n\nexport default Article;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport formatDate from '../../../utils/formatDate';\nimport './Article.css';\n\nconst Article = ({ article }) => (\n  <div className=\"article__list\">\n    <div className=\"article__wraper\">\n      <span className=\"article__title\">{article.title}</span>\n      <span className=\"article__author\">\n        автор:\n        <span className=\"article__author__name\">{article.author.username}</span>\n        <img\n          className=\"image__user\"\n          alt=\"картинка пользователя\"\n          src={article.author.image}\n        />\n      </span>\n    </div>\n    {article.tagList && (\n      <div className=\"article__tagList\">\n        {article.tagList.map((item) => (\n          <span key={item} className=\"article__tagList__item\">\n            {item}\n          </span>\n        ))}\n      </div>\n    )}\n    <span className=\"article__generated\">\n      создано:\n      <span className=\"article__generated__time\">\n        {`${formatDate(article.createdAt)} назад`}\n      </span>\n    </span>\n    {article.updatedAt === article.createdAt ? (\n      ''\n    ) : (\n      <span className=\"article__generated\">\n        изменено:\n        <span className=\"article__generated__time\">\n          {`${formatDate(article.updatedAt)} назад`}\n        </span>\n      </span>\n    )}\n  </div>\n);\n\nArticle.propTypes = {\n  article: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.number,\n    PropTypes.object,\n  ]).isRequired,\n};\n\nexport default Article;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { getIsAuth, getArticlesList } from '../../../redux/selectors';\nimport * as actions from '../../../redux/actions';\nimport Article from '../Article';\nimport './ArticlesList.css';\n\nconst ArticlesList = ({ articlesList, getArticle }) => {\n  const history = useHistory();\n  const { articles } = articlesList;\n  const hanleClckArticle = async (event, slug) => {\n    getArticle(history, slug);\n  };\n\n  return (\n    <div className=\"articles\">\n      {articles\n        && articles.map((item) => {\n          const { slug } = item;\n          return (\n            <div\n              key={slug}\n              className=\"article__container\"\n              onKeyDown={(event) => hanleClckArticle(event, slug)}\n              tabIndex={0}\n              onClick={(event) => hanleClckArticle(event, slug)}\n              role=\"button\"\n            >\n              <Article article={item} hanleClckArticle={hanleClckArticle} />\n            </div>\n          );\n        })}\n      <Pagination />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isAuth: getIsAuth(state),\n    articlesList: getArticlesList(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  getUser: actions.getUser,\n  setLoginSuccess: actions.setLoginSuccess,\n  getArticles: actions.getArticles,\n  getArticle: actions.getArticle,\n};\n\nArticlesList.propTypes = {\n  articlesList: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.number,\n    PropTypes.object,\n  ]).isRequired,\n  getArticle: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(ArticlesList);\n","import ArticlesList from './ArticlesList';\n\nexport default ArticlesList;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { uniqueId } from 'lodash';\nimport { FavoriteBorder, Favorite } from '@material-ui/icons';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {\n  getArticleOne,\n  getUsername,\n  getIsAuth,\n} from '../../../redux/selectors';\nimport * as actions from '../../../redux/actions';\nimport formatDate from '../../../utils/formatDate';\nimport './ViewArticle.css';\n\nconst ViewArticle = ({ articleOne, username, isAuth }) => {\n  const { article } = articleOne;\n  const returnLike = () => (\n    <li className=\"view__data\">\n      <Tooltip title=\"убрать лайк\">\n        <Favorite\n          color=\"secondary\"\n          onClick={() => console.log('клик прошел')}\n        />\n      </Tooltip>\n      <span>{article.favoritesCount}</span>\n    </li>\n  );\n\n  const returnNotLike = () => (\n    <li className=\"view__data\">\n      <Tooltip title=\"поставить лайк\">\n        <FavoriteBorder\n          color=\"secondary\"\n          onClick={() => console.log('клик прошел')}\n        />\n      </Tooltip>\n      <span>{article.favoritesCount}</span>\n    </li>\n  );\n\n  console.log(article);\n  return (\n    <div className=\"container__view\">\n      {isAuth && username === article.author.username ? (\n        <div className=\"view__wrapper__btn\">\n          <Button className=\"view__btn\">редактировать</Button>\n          <Button className=\"view__btn\">удалить</Button>\n        </div>\n      ) : (\n        ''\n      )}\n      <div className=\"container__wrapper__view\">\n        <ul className=\"view__list\">\n          <li className=\"view__data\">\n            <span className=\"data__description\">заголовок: </span>\n            {article.title}\n          </li>\n          <li className=\"view__data\">\n            <span className=\"data__description\">автор: </span>\n            {article.author.username}\n          </li>\n          <li className=\"view__data\">\n            <span className=\"data__description\">краткое описание: </span>\n            {article.description}\n          </li>\n          <li className=\"view__data\">\n            <span className=\"data__description\">статья: </span>\n            {article.body}\n          </li>\n          <li className=\"view__data\">\n            <span className=\"data__description\">дата создания статьи: </span>\n            {formatDate(article.createdAt)}\n          </li>\n          {article.updatedAt === article.createdAt ? (\n            ''\n          ) : (\n            <li className=\"view__data\">\n              <span className=\"data__description\">дата изменения статьи: </span>\n              {formatDate(article.updatedAt)}\n            </li>\n          )}\n          {article.tagList.map((tag) => (\n            <li key={uniqueId()} className=\"view__data\">\n              {tag}\n            </li>\n          ))}\n          {article.favorited ? returnLike() : returnNotLike()}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    articleOne: getArticleOne(state),\n    username: getUsername(state),\n    isAuth: getIsAuth(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  getArticle: actions.getArticle,\n};\n\nViewArticle.propTypes = {\n  articleOne: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.number,\n    PropTypes.object,\n  ]).isRequired,\n  username: PropTypes.string.isRequired,\n  isAuth: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(ViewArticle);\n","import ViewArticle from './ViewArticle';\n\nexport default ViewArticle;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { getUsername } from '../../redux/selectors';\nimport * as actions from '../../redux/actions';\nimport './Home.css';\nimport { clearLocalstoge } from '../../utils/localStorage';\nimport { getAdd, getLogin, getBlogging } from '../../utils/route';\n\nconst mapStateToProps = (state) => {\n  const props = {\n    username: getUsername(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  setLoginExit: actions.setLoginExit,\n  getArticles: actions.getArticles,\n  userArticles: actions.userArticles,\n};\n\nconst Houme = ({\n  username, setLoginExit, getArticles, userArticles,\n}) => {\n  const handleClickExit = () => {\n    setLoginExit();\n    clearLocalstoge();\n  };\n\n  const handleClickAllArticles = () => {\n    getArticles();\n  };\n\n  const handleClickUserArticles = () => {\n    userArticles(username);\n  };\n\n  return (\n    <div className=\"wrapper__houme\">\n      <h1 className=\"title\">Личный кабинет</h1>\n      <span className=\"name\">{username}</span>\n      <div className=\"houme__block__btn\">\n        <Button\n          className=\"houme__btn__articles\"\n          onClick={handleClickAllArticles}\n        >\n          <NavLink to={getBlogging()}>Показать все статьи</NavLink>\n        </Button>\n        <Button\n          className=\"houme__btn__articles\"\n          onClick={handleClickUserArticles}\n        >\n          <NavLink to={getBlogging()}>Показать мои статьи</NavLink>\n        </Button>\n        <Button className=\"houme__btn__articles\">\n          <NavLink to={getAdd()}>Добавить статью</NavLink>\n        </Button>\n      </div>\n      <Button className=\"houme__btn__exit\" onClick={handleClickExit}>\n        <NavLink to={getLogin()}>Выход</NavLink>\n      </Button>\n    </div>\n  );\n};\n\nHoume.propTypes = {\n  username: PropTypes.string.isRequired,\n  setLoginExit: PropTypes.func.isRequired,\n  getArticles: PropTypes.func.isRequired,\n  userArticles: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(Houme);\n","import Houme from './Home';\n\nexport default Houme;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Route, useHistory, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from '../Header';\nimport { getIsAuth } from '../../redux/selectors';\nimport FormRegistration from '../forms/form-registration';\nimport FormAutorization from '../forms/form-autorisation';\nimport FormAddArticle from '../forms/form-add-article';\nimport ArticlesList from '../articles/articles-list';\nimport ViewArticle from '../articles/view-article';\nimport Home from '../Home';\nimport { getToken } from '../../utils/localStorage';\nimport {\n  getBlogging,\n  getLogin,\n  getSignup,\n  getAdd,\n  getSlug,\n} from '../../utils/route';\nimport * as actions from '../../redux/actions';\n\nconst App = ({\n  isAuth, getUser, setLoginSuccess, getArticles,\n}) => {\n  const history = useHistory();\n\n  const fetchPath = () => {\n    const token = getToken();\n    if (token) {\n      getUser(history);\n      setLoginSuccess();\n      getArticles();\n    } else {\n      history.push(getSignup());\n      getArticles();\n    }\n  };\n\n  useEffect(() => {\n    fetchPath();\n  }, [isAuth]);\n\n  return (\n    <div className=\"container\">\n      <Route path={getBlogging()} component={Header} />\n      <div className=\"wrapper_container\">\n        <div className=\"sitebar\">\n          {isAuth && <Route path={getBlogging()} component={Home} />}\n          <Route path={getLogin()} component={FormAutorization} />\n          <Route path={getSignup()} component={FormRegistration} />\n        </div>\n        <Switch>\n          <Route exact path={getSlug()} component={ViewArticle} />\n          <Route path={getSignup()} component={ArticlesList} />\n          <Route path={getLogin()} component={ArticlesList} />\n          <Route exact path={getBlogging()} component={ArticlesList} />\n        </Switch>\n        <Route exact path={getAdd()} component={FormAddArticle} />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const props = {\n    isAuth: getIsAuth(state),\n  };\n  return props;\n};\n\nconst actionCreators = {\n  getUser: actions.getUser,\n  setLoginSuccess: actions.setLoginSuccess,\n  getArticles: actions.getArticles,\n};\n\nApp.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  getUser: PropTypes.func.isRequired,\n  setLoginSuccess: PropTypes.func.isRequired,\n  getArticles: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(App);\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport redusers from './redux/redusers';\nimport '@csstools/normalize.css';\nimport 'antd/dist/antd.css';\nimport App from './components/App';\n\nconst store = createStore(redusers, compose(applyMiddleware(thunk)));\nconst Main = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route component={App} />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}